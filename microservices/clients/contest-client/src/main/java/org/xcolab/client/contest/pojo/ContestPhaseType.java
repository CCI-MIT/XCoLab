/**
 * This class is generated by jOOQ
 */
package org.xcolab.client.contest.pojo;


import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import org.springframework.core.ParameterizedTypeReference;
import org.xcolab.util.http.client.types.TypeProvider;

import javax.annotation.Generated;
import java.io.Serializable;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContestPhaseType implements Serializable {

    private static final long serialVersionUID = -1058488906;

    public static final TypeProvider<ContestPhaseType> TYPES =
            new TypeProvider<>(ContestPhaseType.class,
                    new ParameterizedTypeReference<List<ContestPhaseType>>() {
                    });

    private Long    id_;
    private String  name;
    private String  description;
    private String  status;
    private Boolean fellowscreeningactivedefault;
    private String  contestphaseautopromotedefault;
    private Boolean invisible;
    private Integer pointsaccessible;
    private String  defaultpromotiontype;

    public ContestPhaseType() {}

    public ContestPhaseType(ContestPhaseType value) {
        this.id_ = value.id_;
        this.name = value.name;
        this.description = value.description;
        this.status = value.status;
        this.fellowscreeningactivedefault = value.fellowscreeningactivedefault;
        this.contestphaseautopromotedefault = value.contestphaseautopromotedefault;
        this.invisible = value.invisible;
        this.pointsaccessible = value.pointsaccessible;
        this.defaultpromotiontype = value.defaultpromotiontype;
    }

    public ContestPhaseType(
        Long    id_,
        String  name,
        String  description,
        String  status,
        Boolean fellowscreeningactivedefault,
        String  contestphaseautopromotedefault,
        Boolean invisible,
        Integer pointsaccessible,
        String  defaultpromotiontype
    ) {
        this.id_ = id_;
        this.name = name;
        this.description = description;
        this.status = status;
        this.fellowscreeningactivedefault = fellowscreeningactivedefault;
        this.contestphaseautopromotedefault = contestphaseautopromotedefault;
        this.invisible = invisible;
        this.pointsaccessible = pointsaccessible;
        this.defaultpromotiontype = defaultpromotiontype;
    }

    public Long getId_() {
        return this.id_;
    }

    public void setId_(Long id_) {
        this.id_ = id_;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public Boolean getFellowScreeningActiveDefault() {
        return this.fellowscreeningactivedefault;
    }

    public void setFellowScreeningActiveDefault(Boolean fellowscreeningactivedefault) {
        this.fellowscreeningactivedefault = fellowscreeningactivedefault;
    }

    public String getContestPhaseAutopromoteDefault() {
        return this.contestphaseautopromotedefault;
    }

    public void setContestPhaseAutopromoteDefault(String contestphaseautopromotedefault) {
        this.contestphaseautopromotedefault = contestphaseautopromotedefault;
    }

    public Boolean getInvisible() {
        return this.invisible;
    }

    public void setInvisible(Boolean invisible) {
        this.invisible = invisible;
    }

    public Integer getPointsAccessible() {
        return this.pointsaccessible;
    }

    public void setPointsAccessible(Integer pointsaccessible) {
        this.pointsaccessible = pointsaccessible;
    }

    public String getDefaultPromotionType() {
        return this.defaultpromotiontype;
    }

    public void setDefaultPromotionType(String defaultpromotiontype) {
        this.defaultpromotiontype = defaultpromotiontype;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ContestPhaseType other = (ContestPhaseType) obj;
        if (id_ == null) {
            if (other.id_ != null)
                return false;
        }
        else if (!id_.equals(other.id_))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (description == null) {
            if (other.description != null)
                return false;
        }
        else if (!description.equals(other.description))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (fellowscreeningactivedefault == null) {
            if (other.fellowscreeningactivedefault != null)
                return false;
        }
        else if (!fellowscreeningactivedefault.equals(other.fellowscreeningactivedefault))
            return false;
        if (contestphaseautopromotedefault == null) {
            if (other.contestphaseautopromotedefault != null)
                return false;
        }
        else if (!contestphaseautopromotedefault.equals(other.contestphaseautopromotedefault))
            return false;
        if (invisible == null) {
            if (other.invisible != null)
                return false;
        }
        else if (!invisible.equals(other.invisible))
            return false;
        if (pointsaccessible == null) {
            if (other.pointsaccessible != null)
                return false;
        }
        else if (!pointsaccessible.equals(other.pointsaccessible))
            return false;
        if (defaultpromotiontype == null) {
            if (other.defaultpromotiontype != null)
                return false;
        }
        else if (!defaultpromotiontype.equals(other.defaultpromotiontype))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id_ == null) ? 0 : id_.hashCode());
        result = prime * result + ((name == null) ? 0 : name.hashCode());
        result = prime * result + ((description == null) ? 0 : description.hashCode());
        result = prime * result + ((status == null) ? 0 : status.hashCode());
        result = prime * result + ((fellowscreeningactivedefault == null) ? 0 : fellowscreeningactivedefault.hashCode());
        result = prime * result + ((contestphaseautopromotedefault == null) ? 0 : contestphaseautopromotedefault.hashCode());
        result = prime * result + ((invisible == null) ? 0 : invisible.hashCode());
        result = prime * result + ((pointsaccessible == null) ? 0 : pointsaccessible.hashCode());
        result = prime * result + ((defaultpromotiontype == null) ? 0 : defaultpromotiontype.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ContestPhaseType (");

        sb.append(id_);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(status);
        sb.append(", ").append(fellowscreeningactivedefault);
        sb.append(", ").append(contestphaseautopromotedefault);
        sb.append(", ").append(invisible);
        sb.append(", ").append(pointsaccessible);
        sb.append(", ").append(defaultpromotiontype);

        sb.append(")");
        return sb.toString();
    }
}
