/**
 * This class is generated by jOOQ
 */
package org.xcolab.client.contest.pojo;


import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import org.springframework.core.ParameterizedTypeReference;
import org.xcolab.util.http.client.types.TypeProvider;

import javax.annotation.Generated;
import java.io.Serializable;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ContestTeamMember implements Serializable {

    public static final TypeProvider<ContestTeamMember> TYPES =
            new TypeProvider<>(ContestTeamMember.class,
                    new ParameterizedTypeReference<List<ContestTeamMember>>() {
                    });

    private static final long serialVersionUID = 2108956872;

    private Long id_;
    private Long contestid;
    private Long userid;
    private Long roleid;

    public ContestTeamMember() {}

    public ContestTeamMember(ContestTeamMember value) {
        this.id_ = value.id_;
        this.contestid = value.contestid;
        this.userid = value.userid;
        this.roleid = value.roleid;
    }

    public ContestTeamMember(
        Long id_,
        Long contestid,
        Long userid,
        Long roleid
    ) {
        this.id_ = id_;
        this.contestid = contestid;
        this.userid = userid;
        this.roleid = roleid;
    }

    public Long getId_() {
        return this.id_;
    }

    public void setId_(Long id_) {
        this.id_ = id_;
    }

    public Long getContestId() {
        return this.contestid;
    }

    public void setContestId(Long contestid) {
        this.contestid = contestid;
    }

    public Long getUserId() {
        return this.userid;
    }

    public void setUserId(Long userid) {
        this.userid = userid;
    }

    public Long getRoleId() {
        return this.roleid;
    }

    public void setRoleId(Long roleid) {
        this.roleid = roleid;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ContestTeamMember other = (ContestTeamMember) obj;
        if (id_ == null) {
            if (other.id_ != null)
                return false;
        }
        else if (!id_.equals(other.id_))
            return false;
        if (contestid == null) {
            if (other.contestid != null)
                return false;
        }
        else if (!contestid.equals(other.contestid))
            return false;
        if (userid == null) {
            if (other.userid != null)
                return false;
        }
        else if (!userid.equals(other.userid))
            return false;
        if (roleid == null) {
            if (other.roleid != null)
                return false;
        }
        else if (!roleid.equals(other.roleid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id_ == null) ? 0 : id_.hashCode());
        result = prime * result + ((contestid == null) ? 0 : contestid.hashCode());
        result = prime * result + ((userid == null) ? 0 : userid.hashCode());
        result = prime * result + ((roleid == null) ? 0 : roleid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ContestTeamMember (");

        sb.append(id_);
        sb.append(", ").append(contestid);
        sb.append(", ").append(userid);
        sb.append(", ").append(roleid);

        sb.append(")");
        return sb.toString();
    }
}
