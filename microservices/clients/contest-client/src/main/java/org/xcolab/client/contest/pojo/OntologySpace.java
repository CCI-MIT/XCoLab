/**
 * This class is generated by jOOQ
 */
package org.xcolab.client.contest.pojo;


import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;

import org.springframework.core.ParameterizedTypeReference;
import org.xcolab.util.http.client.types.TypeProvider;

import java.io.Serializable;
import java.util.List;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
public class OntologySpace implements Serializable {

    public static final TypeProvider<OntologySpace> TYPES = new TypeProvider<>(OntologySpace.class,
            new ParameterizedTypeReference<List<OntologySpace>>() {
            });

    private static final long serialVersionUID = 1923392552;

    private Long    id_;
    private String  name;
    private String  description;
    private Integer order_;

    public OntologySpace() {}

    public OntologySpace(OntologySpace value) {
        this.id_ = value.id_;
        this.name = value.name;
        this.description = value.description;
        this.order_ = value.order_;
    }

    public OntologySpace(
        Long    id_,
        String  name,
        String  description,
        Integer order_
    ) {
        this.id_ = id_;
        this.name = name;
        this.description = description;
        this.order_ = order_;
    }

    public Long getId_() {
        return this.id_;
    }

    public void setId_(Long id_) {
        this.id_ = id_;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Integer getOrder_() {
        return this.order_;
    }

    public void setOrder_(Integer order_) {
        this.order_ = order_;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final OntologySpace other = (OntologySpace) obj;
        if (id_ == null) {
            if (other.id_ != null)
                return false;
        }
        else if (!id_.equals(other.id_))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (description == null) {
            if (other.description != null)
                return false;
        }
        else if (!description.equals(other.description))
            return false;
        if (order_ == null) {
            if (other.order_ != null)
                return false;
        }
        else if (!order_.equals(other.order_))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id_ == null) ? 0 : id_.hashCode());
        result = prime * result + ((name == null) ? 0 : name.hashCode());
        result = prime * result + ((description == null) ? 0 : description.hashCode());
        result = prime * result + ((order_ == null) ? 0 : order_.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("OntologySpace (");

        sb.append(id_);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(order_);

        sb.append(")");
        return sb.toString();
    }
}
