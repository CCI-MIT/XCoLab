/**
 * This class is generated by jOOQ
 */
package org.xcolab.client.contest.pojo;


import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;

import org.springframework.core.ParameterizedTypeReference;
import org.xcolab.util.http.client.types.TypeProvider;

import java.io.Serializable;
import java.util.List;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
public class FocusAreaOntologyTerm implements Serializable {

    public static final TypeProvider<FocusAreaOntologyTerm> TYPES = new TypeProvider<>(FocusAreaOntologyTerm.class,
            new ParameterizedTypeReference<List<FocusAreaOntologyTerm>>() {
            });

    private static final long serialVersionUID = -809057183;

    private Long    focusareaid;
    private Long    ontologytermid;
    private Integer order_;

    public FocusAreaOntologyTerm() {}

    public FocusAreaOntologyTerm(FocusAreaOntologyTerm value) {
        this.focusareaid = value.focusareaid;
        this.ontologytermid = value.ontologytermid;
        this.order_ = value.order_;
    }

    public FocusAreaOntologyTerm(
        Long    focusareaid,
        Long    ontologytermid,
        Integer order_
    ) {
        this.focusareaid = focusareaid;
        this.ontologytermid = ontologytermid;
        this.order_ = order_;
    }

    public Long getFocusAreaId() {
        return this.focusareaid;
    }

    public void setFocusAreaId(Long focusareaid) {
        this.focusareaid = focusareaid;
    }

    public Long getOntologyTermId() {
        return this.ontologytermid;
    }

    public void setOntologyTermId(Long ontologytermid) {
        this.ontologytermid = ontologytermid;
    }

    public Integer getOrder_() {
        return this.order_;
    }

    public void setOrder_(Integer order_) {
        this.order_ = order_;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FocusAreaOntologyTerm other = (FocusAreaOntologyTerm) obj;
        if (focusareaid == null) {
            if (other.focusareaid != null)
                return false;
        }
        else if (!focusareaid.equals(other.focusareaid))
            return false;
        if (ontologytermid == null) {
            if (other.ontologytermid != null)
                return false;
        }
        else if (!ontologytermid.equals(other.ontologytermid))
            return false;
        if (order_ == null) {
            if (other.order_ != null)
                return false;
        }
        else if (!order_.equals(other.order_))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((focusareaid == null) ? 0 : focusareaid.hashCode());
        result = prime * result + ((ontologytermid == null) ? 0 : ontologytermid.hashCode());
        result = prime * result + ((order_ == null) ? 0 : order_.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FocusAreaOntologyTerm (");

        sb.append(focusareaid);
        sb.append(", ").append(ontologytermid);
        sb.append(", ").append(order_);

        sb.append(")");
        return sb.toString();
    }
}
