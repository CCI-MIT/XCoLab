/*
 * This file is generated by jOOQ.
*/
package org.xcolab.service.utils.db.jooq.test.generated;


import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships between tables of the <code></code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ContestRecord, Long> IDENTITY_CONTEST = Identities0.IDENTITY_CONTEST;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ContestRecord> CONTEST_PRIMARY = UniqueKeys0.CONTEST_PRIMARY;
    public static final UniqueKey<ContestRecord> CONTEST_UNIQUE_INDEX_CONTEST_NAME_YEAR = UniqueKeys0.CONTEST_UNIQUE_INDEX_CONTEST_NAME_YEAR;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<ContestRecord, Long> IDENTITY_CONTEST = createIdentity(ContestTable.CONTEST, ContestTable.CONTEST.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<ContestRecord> CONTEST_PRIMARY = createUniqueKey(ContestTable.CONTEST, "KEY_contest__contest_PRIMARY", ContestTable.CONTEST.ID);
        public static final UniqueKey<ContestRecord> CONTEST_UNIQUE_INDEX_CONTEST_NAME_YEAR = createUniqueKey(ContestTable.CONTEST, "KEY_contest__contest_unique_index_contest_name_year", ContestTable.CONTEST.CONTEST_URL_NAME, ContestTable.CONTEST.CONTEST_YEAR);
    }
}
