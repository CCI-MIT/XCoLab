<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:xcolab="urn:jsptagdir:/WEB-INF/tags"
          version="2.0">

    <!-- Avoid loading the editor more than once -->
    <c:if test="${empty _ckEditorLoaded}">
        <c:set var="_ckEditorLoaded" value="true" scope="request" />

        <script type="text/javascript">
            var CKEDITOR_BASEPATH = '/js/lib/ckeditor/';
        </script>

        <xcolab:script src="/js/lib/ckeditor/ckeditor.js" />

        <!-- TODO: a lot of this is currently duplicated on other pages (this snippet is from contest-manager.js) -->
        <!-- TODO: split CKEditor initialization (on demand) and dirty check (always)-->
        <script type="text/javascript">
        <![CDATA[

        function markEditorDirty(editor) {
            editor.addClass('editorDirty');
        }

        function countCharacters(input, editor) {
            if (editor) {
                if (editor == null || editor.document == null) return 0;
                if (editor.document['$'].body.textContent) {
                    return jQuery.trim(editor.document['$'].body.textContent).length;

                }
                if (editor.document['$'].body.innerText) {
                    return jQuery.trim(editor.document['$'].body.innerText).length;
                }
            }
            return jQuery.trim(input.val().replace(/&lt;[^&gt;]*&gt;/g, "").replace(/\s+/g, " ").length);
        }

        function updateCharacterCounter(input, editor) {

            var max = input.attr('data-characterLimit');
            if (input && input.limitCharacterCounter) {
                var count = countCharacters(input, editor);
                if (count > 1 * max) {
                    input.limitCharacterCounter.parent().addClass('overflow');
                    input.addClass('invalid');
                }
                else {
                    input.limitCharacterCounter.parent().removeClass('overflow');
                    input.removeClass('invalid');
                }
                input.limitCharacterCounter.text(count);

                // needed for copy from base proposal - hides button when there is content
                var parent = input.parents('.addpropbox');
                if (count > 0) {
                    parent.removeClass('empty').addClass('notempty');
                }
                else {
                    parent.removeClass('notempty').addClass('empty');
                }
            }
        }

        function initializeTextEditors() {
            jQuery("input[type='text'], textarea").each(function() {
                var element = this;
                var $element = jQuery(this);

                if ($element.hasClass('rte-editorInitialized')) {
                    return;
                }

                var limitCharactersMax = $element.parent().find(".limit_charactersMax");
                var limitCharacterCount = $element.parent().find(".limit_characterCount");

                var countCharacters = limitCharactersMax.length > 0;
                if (countCharacters) {
                    $element.attr({'data-characterLimit': limitCharactersMax.text(), 'data-validateLength': true});
                    $element.limitCharacterCounter = limitCharacterCount;
                    updateCharacterCounter($element);
                } else {
                    $element.attr({'data-validateLength': false});
                }

                if ($element.hasClass("rte-editorPlaceholder")) {

                    var editor = CKEDITOR.replace($element.attr("id"));

                    $element.get(0)["ckeditor"] = editor;
                    editor.updatedCharCount = false;

                    function updateEditorCharCount() {
                        try {
                            if (editor == null) return;

                            if (editor && editor.document && editor.document['$'] && (editor.checkDirty() || editor.updatedCharCount)) {
                                markEditorDirty($element);
                                updateCharacterCounter($element, editor);
                                editor.updatedCharCount = true;
                                editor.resetDirty();
                            }

                            setTimeout(updateEditorCharCount, 1000);
                        } catch (e) {
                            if (typeof(console) != 'undefined' && typeof(console.log) != 'undefined') {
                                console.log(e);
                            }
                        }
                    }
                    // if (! jQuery.browser.ie || jQuery.browser.version.number >= 9) {
                    updateEditorCharCount();
                    // }

                    editor.on("blur", function() {
                        updateCharacterCounter($element, editor);
                    });

                    // initiate char counters
                    setTimeout(function() { updateCharacterCounter($element, editor); }, 2000);
                } else {
                    eventsToBind = {
                        keypress: function(event) {
                            if ($element.attr('data-validateLength') && $element.limitCharacterCounter) {
                                updateCharacterCounter($element);
                            }
                        },
                        keyup: function(event) {
                            console.log("keypup");
                            if ($element.attr('data-validateLength') && $element.limitCharacterCounter) {
                                updateCharacterCounter($element);
                            }
                        },
                        change: function(event) {
                            markEditorDirty($element);
                        }
                    };
                    $element.bind(eventsToBind);
                }
                jQuery(this).addClass('rte-editorInitialized');
            });
        }

        jQuery(function() {
            initializeTextEditors();
        });
        ]]>
        </script>
    </c:if>
</jsp:root>