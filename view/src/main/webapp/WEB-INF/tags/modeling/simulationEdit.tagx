<jsp:root
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:collab="urn:jsptld:/WEB-INF/tlds/xcolab.tld"
    xmlns:xcolab="urn:jsptagdir:/WEB-INF/tags"
	xmlns:modeling="urn:jsptagdir:/WEB-INF/tags/modeling"
	version="2.0">

	<jsp:directive.attribute name="scenarioId" type="java.lang.Long" required="false" rtexprvalue="true" description="scenario id" />
	<jsp:directive.attribute name="modelId" type="java.lang.Long" required="true" rtexprvalue="true" description="model id" />
	<jsp:directive.attribute name="contestModelDefaultSetting" type="java.lang.String" required="false" rtexprvalue="true" description="model id" />
	<jsp:directive.attribute name="inConsolidationMode" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Is the model in consolidation mode" />
	<jsp:directive.attribute name="isRegionalContest" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Is the model for a regional contest" />
	<jsp:directive.attribute name="proposalRegion" type="java.lang.String" required="false" rtexprvalue="true" description="has the proposal a region stored" />
	<jsp:directive.attribute name="modelRegions" type="java.util.List" required="false" rtexprvalue="true" description="has the proposal a region stored" />

    <c:set var="inConsolidationMode" value="${(empty inConsolidationMode) ? false : true}" />
    <c:if test="${isRegionalContest and empty contestModelDefaultSetting}">
        <c:choose>
            <c:when test="${not empty proposalRegion}">
                <c:set var="contestModelRegionSetting" value="${proposalRegion}"></c:set>
            </c:when>
            <c:otherwise>
                <c:set var="contestModelRegionSetting" value="US"></c:set>
            </c:otherwise>
        </c:choose>

        <div id="regionSelect" class="addpropbox">
            <h3 class="floatLeft" style="margin-top: 0">Which modeling region would you like to use?</h3>
            <select id="modelRegion" name="modelRegion">
                <c:forEach var="modelRegion" items="${modelRegions}">
                    <c:choose>
                        <c:when test="${not empty proposalRegion and proposalRegion == modelRegion[0]}">
                            <option value="${modelRegion[0]}" checked="checked">${modelRegion[1]}</option>
                        </c:when>
                        <c:otherwise>
                            <option value="${modelRegion[0]}">${modelRegion[1]}</option>
                        </c:otherwise>
                    </c:choose>
                </c:forEach>
            </select>
        </div>

    </c:if>

	<div id="modelContent">

	<modeling:simulationLoadScripts />

	<xcolab:stylesheet href="/css/pages/modeling/simulation.css" />
        <div class="spinner-area" style="margin: auto; padding-top: 100px; margin-bottom: -100px;"><!-- --> </div>
	<div id="modelsOutputContainer"></div>

	<input type="text" id="modelingScenarioId" class="hidden"/>
	<input type="text" id="modelingModelId" class="hidden"/>
	<script>
	    var options = {edit: true};
        <c:if test="${not empty isRegionalContest and not empty contestModelDefaultSetting}">
            options.defaultValues = ${contestModelDefaultSetting};
        </c:if>

		var modeling = XCoLab.modeling('#modelsOutputContainer', options);
        <c:choose>
			<c:when test="${not empty scenarioId and scenarioId > 0}">
				modeling.loadScenario(${scenarioId});
			</c:when>
			<c:otherwise>
				modeling.loadModel(${modelId});
			</c:otherwise>
		</c:choose>

        function updateModelRegionSetting(modelRegion) {
            modeling.options.defaultValues = {region: modelRegion};
        };

        jQuery("#modelRegion").on('change', function() {
            console.debug("changed model region", this.value);
            updateModelRegionSetting(this.value);
            jQuery("#proposalModelRegion").val(this.value);
        });

        jQuery(function() {
            var contestModelRegionSetting = "${contestModelRegionSetting}";
            if(!!contestModelRegionSetting) {
                console.debug("Setting region", contestModelRegionSetting);
                updateModelRegionSetting(contestModelRegionSetting);
				jQuery("#modelRegion").val(contestModelRegionSetting);
            }
        });

		jQuery(modeling).on("scenarioFetched", function(event) {
			jQuery("#modelingScenarioId").val(event.scenario.scenarioId).addClass("editorDirty");
			jQuery("#modelingModelId").val(event.scenario.modelId).addClass("editorDirty");
			modeling.updateEditMaskAppearance();
		}).on("valueChanged", function(event) {
			jQuery("#modelingScenarioId").addClass("editorDirty");
			jQuery("#modelingModelId").addClass("editorDirty");

		});
	</script>
	</div>

</jsp:root>
