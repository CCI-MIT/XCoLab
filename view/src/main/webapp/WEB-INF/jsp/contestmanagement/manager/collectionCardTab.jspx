<jsp:root version="2.1" xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:form="http://www.springframework.org/tags/form"
          xmlns:xcolab="urn:jsptagdir:/WEB-INF/tags">
<jsp:directive.page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"/>
<xcolab:layout>

    <!--@elvariable id="collectionCardWrapperWhat" type="org.xcolab.portlets.contestmanagement.wrappers.CollectionCardWrapper"-->
    <!--@elvariable id="collectionCardWrapperWhere" type="org.xcolab.portlets.contestmanagement.wrappers.CollectionCardWrapper"-->
    <!--@elvariable id="ontologyTermsWhat" type="java.util.List<org.xcolab.portlets.contestmanagement.wrappers.OntologyTermWrapper>"-->
    <!--@elvariable id="ontologyTermsWhere" type="java.util.List<org.xcolab.portlets.contestmanagement.wrappers.OntologyTermWrapper>"-->
    <!--@elvariable id="section" type="java.lang.Integer"-->
    <!--@elvariable id="level" type="java.lang.Integer"-->
    <!--@elvariable id="_csrf" type="org.springframework.security.web.csrf.CsrfToken>"-->

    <jsp:directive.include file="../init.jspx"/>
    <jsp:directive.include file="./header.jspx"/>

    <div class="explanation">
        <br/>
        <h1>
            Collection Card Editor
        </h1>
        <br/>
        <div class="addpropbox">
             <b>Update</b> an existing Collection Card: Select the specific item in the hierarchy below!
        </div>
        <br/>
        <div class="addpropbox">
            <b>Create </b> a new Collection Card:
            <div style="display:inline-block" >
                <a class="c-Button__primary innerVerticalCenter" href="#" onclick="createNewCollectionCard();">CREATE NEW</a>
            </div>
        </div>
        <br/>
        <br/>
    </div>


    <div class="collectionCard-outline-left">
        <br/>
        <h3 class="collectionCard-category">
            ANY ACTION:
        </h3>
            <xcolab:collectionCardWithChildren collectionCard="${collectionCardWrapperWhat}" section="${section + 1 }" level="${level + 1 }" />
        <h3 class="collectionCard-category">
            ANYWHERE:
        </h3>
            <xcolab:collectionCardWithChildren collectionCard="${collectionCardWrapperWhere}" section="${section + 1 }" level="${level + 1 }" />
    </div>

    <div class="collectionCard-outline-right" style="display:none;">

        <c:set var="updateContestCollectionCardURL" value="/admin/contest/manager/tab/COLLECTION_CARDS/update" />

        <c:set var="deleteContestCollectionCardURL" value="/admin/contest/manager/tab/COLLECTION_CARDS/delete" />

        <form action="${deleteContestCollectionCardURL }" id="deleteCollectionCardForm" method="post" style="visibility: hidden;">
            <input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}"/>
            <input id="collectionCardId" name="collectionCardId"  type="hidden" value=""/>
        </form>

        <form:form action="${updateContestCollectionCardURL }" commandName="collectionCardWrapperWhat" id="editForm" method="post">
            <div class="collectionCard-edit-form">
                <h2 id="title">
                    <!-- -->
                </h2>
                <form:hidden path="createNew" id="createNewFlag"/>
                <input id="id" name="id"  type="hidden" value=""/>
                <div class="addpropbox">
                    <strong class="inputTitleLeft">Ontologyterm to load</strong>
                    <form:select path="ontologyTermToLoad" id="ontologyTermToLoad" cssClass="form-control" items="${collectionCardWrapperWhat.ontologyTerms}" />
                    <button onclick="openOntologyPicker('ontologyTermToLoad');" type="button"> Change</button>
                    <br/>
                    <strong class="inputTitleLeft">Display Ontologyterm</strong>
                    <form:select path="bigOntologyTerm" id="bigOntologyTerm" cssClass="form-control"  items="${collectionCardWrapperWhat.ontologyTerms}" />
                    <button onclick="openOntologyPicker('bigOntologyTerm');" type="button">Change</button>
                    <br/>
                    <strong class="inputTitleLeft">Display Name</strong>
                    <input id="shortName" name="shortName" class="form-control" type="text" value="" validatelength="false"/>
                    <br/>
                    <strong class="inputTitleLeft">Description Text</strong>
                    <input id="description" name="Description" class="form-control" type="text" value="" validatelength="false"/>
                    <br/>
                    <strong class="inputTitleLeft">Parent Collectioncard</strong>
                    <form:select path="parentId" id="parentId" cssClass="form-control" items="${collectionCardWrapperWhat.collectionCards}" />
                    <br/>
                    <strong class="inputTitleLeft">Description Ontologyterm</strong>
                    <form:select path="smallOntologyTerm" id="smallOntologyTerm" cssClass="form-control"  items="${collectionCardWrapperWhat.ontologyTerms}" />
                    <button onclick="openOntologyPicker('smallOntologyTerm');" type="button">Change</button>
                    <br/>
                    <strong class="inputTitleLeft">Weight</strong>
                    <input name="order" id="order" class="form-control" type="number" value="0" />
                    <br/>
                    <strong class="inputTitleLeft">Show "onlyFeatured"</strong>
                    <form:checkbox path="onlyFeatured" id="onlyFeatured" cssClass="form-control"/>
                    <br/>
                    <strong class="inputTitleLeft">Visible</strong>
                    <form:checkbox path="visible" id="visible" cssClass="form-control"/>
                </div>
            </div>
        </form:form>
        <br/>
        <div class="buttonContainer">
            <div>
                <div class="floatRight outerVerticalCenter">
                    <a class="c-Button__primary innerVerticalCenter" href="#" onclick="submitUpdateCollectionCard();">SAVE</a>
                </div>
            </div>
            <div>
                <div class="floatRight outerVerticalCenter">
                    <a class="c-Button__primary innerVerticalCenter" id="deleteButton" href="#" onclick="submitDeleteCollectionCard();">DELETE</a>
                </div>
            </div>
            <div>
                <div class="floatRight outerVerticalCenter">
                    <a class="c-Button__primary innerVerticalCenter" style="display: none" id="cancelButton" href="#" onclick="cancelCollectionCardCreation();">CANCEL</a>
                </div>
            </div>
        </div>
    </div>

    <div class="ontologyPicker" style="display:none;">
        <h2 style="float:left;"> Pick the OntolgoyTerm</h2>
        <br/>
        <div>
            <a class="c-Button__primary innerVerticalCenter" style="float:left; margin-left:20px;" href="#" onclick="setOntologyTerm();">SELECT</a>
        </div>
        <div>
            <a class="c-Button__primary innerVerticalCenter" href="#" onclick="closeOntologyPicker();">CANCEL</a>
        </div>
        <br/>
        <h3> WHAT </h3>
        <div class="whatArea">
            <ul class="level-1">
                <c:forEach var="ontologyTerm" items="${ontologyTermsWhat }">
                    <li class="ontologyTermListItem" >
                        <a href="#"  ontology-id="${ontologyTerm.id}">
                            <span>${ontologyTerm.name}</span>
                        </a>
                        <c:if test="${not empty ontologyTerm.children }">
                            <xcolab:ontologyTermWithChildren ontologyTerm="${ontologyTerm}" section="${section + 1 }" level="1" />
                        </c:if>
                    </li>
                </c:forEach>
            </ul>
        </div>
        <br/>
        <h3> WHERE </h3>
        <div class="whereArea">
            <ul class="level-1">
                <c:forEach var="ontologyTerm" items="${ontologyTermsWhere }">
                    <li class="ontologyTermListItem" >
                        <a href="#"  ontology-id="${ontologyTerm.id}">
                            <span>${ontologyTerm.name}</span>
                        </a>
                        <c:if test="${not empty ontologyTerm.children }">
                            <xcolab:ontologyTermWithChildren ontologyTerm="${ontologyTerm}" section="${section + 1 }" level="1" />
                        </c:if>
                    </li>
                </c:forEach>
            </ul>
        </div>
    </div>


    <script>

        var collectionCards = {};
        <c:forEach var="collectionCard" items="${collectionCardWrapperWhat.allCollectionCards}">
                <c:if test="${not empty collectionCard.parentId}">
                        collectionCards[${collectionCard.id}] = {id: ${collectionCard.id}, parentId: ${collectionCard.parentId}, shortName: '${collectionCard.shortName}', bigOntologyTermId: '${collectionCard.bigOntologyTermId}', smallOntologyTermId: '${collectionCard.smallOntologyTermId}',  ontologyTermToLoadId: '${collectionCard.ontologyTermToLoadId}',bigOntologyTerm: '${collectionCard.bigOntologyTerm}', smallOntologyTerm: '${collectionCard.smallOntologyTerm}',  ontologyTermToLoad: '${collectionCard.ontologyTermToLoad}', visible: ${collectionCard.visible}, onlyFeatured: ${collectionCard.onlyFeatured}, description: '${collectionCard.description}', order: '${collectionCard.order}'};
                </c:if>
        </c:forEach>



        <![CDATA[
                jQuery(function() {
                    document.getElementById("ontologyTermToLoad").disabled=true;
                    document.getElementById("smallOntologyTerm").disabled=true;
                    document.getElementById("bigOntologyTerm").disabled=true;
                });

        jQuery(".collectionCard-outline-left").on('click', 'a', function(event) {
            event.preventDefault();
            var that = this;
            var self = jQuery(this);
            var container = self.parent();
            container.addClass('currentlyClicked');
            jQuery('.collectionCard-outline-left li.active').not('.currentlyClicked').removeClass(
                    'active');
            jQuery('.collectionCard-outline-left a.open').each(function () {
                if (that == this) return;

                var parent = jQuery(this).parent();
                if (!parent.hasClass('currentlyClicked') && parent.find(".currentlyClicked").length
                        == 0) {
                    // this is different branch than the one currently clicked, close it
                    parent.find(".open").removeClass("open");
                    parent.find("> ul").slideUp();
                }
            });
            container.removeClass('currentlyClicked').toggleClass('active');
            if (!container.hasClass('active')) {
                container.find("> ul").slideUp();
                self.removeClass('open');
            }
            else {
                self.addClass('open');
                container.find("> ul").slideDown();

                if (container.find("> ul > li").length == 1) {
                    container.find("> ul > li > a").not(".open").addClass('open');
                    container.find("> ul > li > ul").slideDown();
                }
            }
        });

        jQuery(".ontologyPicker").on('click', 'a', function(event) {
            event.preventDefault();
            var that = this;
            var self = jQuery(this);
            var container = self.parent();
            container.addClass('currentlyClicked');
            jQuery('.ontologyPicker li.active').not('.currentlyClicked').removeClass(
                    'active');
            jQuery('.ontologyPicker a.open').each(function () {
                if (that == this) return;

                var parent = jQuery(this).parent();
                if (!parent.hasClass('currentlyClicked') && parent.find(".currentlyClicked").length
                        == 0) {
                    // this is different branch than the one currently clicked, close it
                    parent.find(".open").removeClass("open");
                    parent.find("> ul").slideUp();
                }
            });
            container.removeClass('currentlyClicked').toggleClass('active');
            if (!container.hasClass('active')) {
                container.find("> ul").slideUp();
                self.removeClass('open');
            }
            else {
                self.addClass('open');
                container.find("> ul").slideDown();

                if (container.find("> ul > li").length == 1) {
                    container.find("> ul > li > a").not(".open").addClass('open');
                    container.find("> ul > li > ul").slideDown();
                }
            }
        });


        jQuery(".collectionCard-outline-left").on('click', 'a', function(event) {
            event.preventDefault();
            var self = jQuery(this);
            loadCollectionCardForm(self.attr('data-card-id'));
            jQuery(".collectionCard-outline-right").show();
        });


        function loadCollectionCardForm(collectionCardId) {

            jQuery("#createNewFlag").val(false);

            var collectionCard = collectionCards[collectionCardId];

            jQuery(".collectionCard-edit-form #title").html(collectionCard.description)
            jQuery("#deleteCollectionCardForm #collectionCardId").val(collectionCardId);
            jQuery(".collectionCard-edit-form #id").val(collectionCardId);
            jQuery(".collectionCard-edit-form #description").val(collectionCard.description);
            jQuery(".collectionCard-edit-form #shortName").val(collectionCard.shortName);
            jQuery(".collectionCard-edit-form #parentId").val(collectionCard.parentId);
            jQuery(".collectionCard-edit-form #ontologyTermToLoad").val(collectionCard.ontologyTermToLoadId);
            jQuery(".collectionCard-edit-form #bigOntologyTerm").val(collectionCard.bigOntologyTermId);
            jQuery(".collectionCard-edit-form #smallOntologyTerm").val(collectionCard.smallOntologyTermId);
            jQuery(".collectionCard-edit-form #order").val(collectionCard.order);
            jQuery(".collectionCard-edit-form #onlyFeatured").val(collectionCard.onlyFeatured);
            jQuery(".collectionCard-edit-form #visible").val(collectionCard.visible);

        }

        function submitUpdateCollectionCard() {

            var inputError = false;
            if(jQuery(".collectionCard-edit-form #parentId").val() < 1) {
                jQuery(".collectionCard-edit-form #parentId").css("background-color", "lightcoral");
                inputError = true;
            } else {
                jQuery(".collectionCard-edit-form #parentId").css("background-color", "white");
            }
            if(jQuery(".collectionCard-edit-form #ontologyTermToLoad").val() < 1) {
                jQuery(".collectionCard-edit-form #ontologyTermToLoad").css("background-color", "lightcoral");
                inputError = true;
            } else {
                jQuery(".collectionCard-edit-form #ontologyTermToLoad").css("background-color", "white");
            }
            if(jQuery(".collectionCard-edit-form #bigOntologyTerm").val() < 1) {
                jQuery(".collectionCard-edit-form #bigOntologyTerm").css("background-color", "lightcoral");
                inputError = true;
            } else {
                jQuery(".collectionCard-edit-form #bigOntologyTerm").css("background-color", "white");
            }
            if(jQuery(".collectionCard-edit-form #smallOntologyTerm").val() < 1) {
                jQuery(".collectionCard-edit-form #smallOntologyTerm").css("background-color", "lightcoral");
                inputError = true;
            } else {
                jQuery(".collectionCard-edit-form #smallOntologyTerm").css("background-color", "white");
            }

            if(inputError) {
                alert("Please check your inputs")
            } else {
                document.getElementById("ontologyTermToLoad").disabled=false;
                document.getElementById("smallOntologyTerm").disabled=false;
                document.getElementById("bigOntologyTerm").disabled=false;
                document.getElementById('editForm').submit();
            }
        }

        function submitDeleteCollectionCard() {
            if(jQuery("#deleteCollectionCardForm #collectionCardId").val() > 0) {
                var r = confirm("Please confirm the deletion of CollectionCard: '" + jQuery(".collectionCard-edit-form #title").html() + "' \n Children will be moved to its parent!");
                if(r) {
                    document.getElementById('deleteCollectionCardForm').submit();
                } else {
                    alert("You canceled the deletion!");
                }
            } else {
                alert("Please select an existing CollectionCard to delete!");
            }
        }

        function createNewCollectionCard() {

            jQuery("#createNewFlag").val(true);

            jQuery(".collectionCard-edit-form #title").html("New CollectionCard");
            jQuery("#deleteCollectionCardForm #collectionCardId").val(-1);
            jQuery(".collectionCard-edit-form #id").val(-1); //just for validation
            jQuery(".collectionCard-edit-form #description").val("");
            jQuery(".collectionCard-edit-form #shortName").val("");
            jQuery(".collectionCard-edit-form #parentId").val(-1);
            jQuery(".collectionCard-edit-form #ontologyTermToLoad").val(-1);
            jQuery(".collectionCard-edit-form #bigOntologyTerm").val(-1);
            jQuery(".collectionCard-edit-form #smallOntologyTerm").val(-1);
            jQuery(".collectionCard-edit-form #order").val(0);
            jQuery(".collectionCard-edit-form #onlyFeatured").val(false);
            jQuery(".collectionCard-edit-form #visible").val(true);

            jQuery("#deleteButton").hide();
            jQuery(".collectionCard-outline-left").hide();
            jQuery(".collectionCard-outline-right").css("width","100%");
            jQuery(".collectionCard-outline-right").show();
            jQuery("#cancelButton").show();
        }

        function cancelCollectionCardCreation() {
            jQuery("#createNewFlag").val(false);

            jQuery("#cancelButton").hide();
            jQuery("#deleteButton").show();
            jQuery(".collectionCard-outline-left").show();
            jQuery(".collectionCard-outline-right").css("width", "40%");
            jQuery(".collectionCard-outline-right").hide();

            jQuery(".collectionCard-edit-form #description").css("background-color", "white");
            jQuery(".collectionCard-edit-form #shortName").css("background-color", "white");
            jQuery(".collectionCard-edit-form #parentId").css("background-color", "white");
            jQuery(".collectionCard-edit-form #ontologyTermToLoad").css("background-color", "white");
            jQuery(".collectionCard-edit-form #bigOntologyTerm").css("background-color", "white");
            jQuery(".collectionCard-edit-form #smallOntologyTerm").css("background-color", "white");
        }

        var currentTermType;
        var currentOntologyId;

        function openOntologyPicker(termType) {
            currentTermType = termType;
            jQuery(".ontologyPicker").show();
            jQuery(".collectionCard-outline-left").css("filter", "blur(5px)");
            jQuery(".collectionCard-outline-right").css("filter", "blur(5px)");
            jQuery(".proposal-head").css("filter", "blur(5px)");
            jQuery(".explanation").css("filter", "blur(5px)");
        }

        function setOntologyTerm() {
            if(1 > $('.ontologyPicker .active .open').length) {
                alert("Please select a new Ontology Term!")
            } else {
                jQuery(".collectionCard-edit-form #" + currentTermType).val(currentOntologyId);
                if(currentTermType == "ontologyTermToLoad") {
                    jQuery(".collectionCard-edit-form #bigOntologyTerm").val(currentOntologyId);
                    jQuery(".collectionCard-edit-form #smallOntologyTerm").val(currentOntologyId);
                    jQuery(".collectionCard-edit-form #smallOntologyTerm").val(currentOntologyId);
                    jQuery(".collectionCard-edit-form #description").val("");
                    jQuery(".collectionCard-edit-form #shortName").val("");
                }
                closeOntologyPicker();
            }
        }

        jQuery(".ontologyPicker").on('click', 'a', function(event) {
            event.preventDefault();
            var self = jQuery(this);
            currentOntologyId = self.attr('ontology-id');
        });

        function closeOntologyPicker() {
            currentTermType = "";
            currentOntologyId = 0;
            jQuery(".ontologyPicker").hide();
            jQuery(".collectionCard-outline-left").css("filter","");
            jQuery(".collectionCard-outline-right").css("filter","");
            jQuery(".proposal-head").css("filter","");
            jQuery(".explanation").css("filter","");
        }

        ]]>
    </script>
</xcolab:layout>
</jsp:root>
