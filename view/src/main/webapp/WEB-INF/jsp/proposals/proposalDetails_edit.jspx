<jsp:root version="2.1" xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:fn="http://java.sun.com/jsp/jstl/functions"
          xmlns:form="http://www.springframework.org/tags/form"
          xmlns:proposalsPortlet="urn:jsptagdir:/WEB-INF/tags/proposalsPortlet"
          xmlns:xcolab="urn:jsptagdir:/WEB-INF/tags"
          xmlns:spring="http://www.springframework.org/tags">

    <jsp:directive.page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"/>
<xcolab:layout  title="${proposal.name} - Edit">
    <!--@elvariable id="isMove" type="java.lang.Boolean"-->
    <!--@elvariable id="hasUnmappedSections" type="java.lang.Boolean"-->
    <!--@elvariable id="userTeams" type="java.util.List<org.xcolab.client.members.pojo.PlatformTeam>"-->
    <!--@elvariable id="_csrf" type="org.springframework.security.web.csrf.CsrfToken>"-->

    <jsp:directive.include file="./init_proposal.jspx"/>

    <script>
        var EXTERNAL_IMAGE_UPLOAD_URL = '${requestScope.imageUploadServiceUrl}';
        var IMAGE_UPLOAD_HELP_TEXT = '${requestScope.imageUploadHelpText}';
    </script>

    <script>
        var currentProposal = {
            proposalId: ${proposal.proposalId},
            version: ${proposal.version}
        }
    </script>

    <c:if test="${not empty baseProposal}">
        <script>
            var baseProposal = {
                proposalId: ${baseProposal.proposalId},
                version: ${baseProposal.version}
            }
        </script>
    </c:if>
    <c:if test="${not empty baseContest}">
        <script>
            var baseContest = {
                contestPK: ${baseContest.contestPK}
            }
        </script>
    </c:if>

    <jsp:directive.include file="./proposalDetails/header.jspx" />

    <!--ProposalSectionsTabController-->
    <c:if test="${isMove}">
        <jsp:useBean id="baseProposal" scope="request" type="org.xcolab.client.proposals.pojo.Proposal"/>
        <jsp:useBean id="baseContest" scope="request" type="org.xcolab.client.contest.pojo.Contest"/>
    </c:if>

    <style>
        td em {
            background: #000; border-radius: 5px; font-style: normal;
            box-shadow: 0 0 2px #000;
        }
    </style>

    <c:if test="${mustFilterContent}">
        <div class="modal fade" id="js-filteringModal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Preparing for submission...</h4>
                    </div>
                    <div class="modal-body">
                        <div id="loading_filtering_image" style="text-align: left"><img border="0" src="${_themeImageFolder}/loader.gif"/></div>
                        <div id="processedFailed" style="display:none;margin-top: 8px;">Your entry contains disallowed words. Please remove offensive words before saving again</div>
                    </div>
                    <div class="modal-footer">
                        <button type="close" class="c-Button__secondary" data-dismiss="modal">Close</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div><!-- /.modal -->
    </c:if>

    <div class="prop-left">

        <div class="c-Headline addprop">
            <c:choose>
                <c:when test="${isMove }">
                    <p>
                        You're about to move a ${fn:toLowerCase(contestType.proposalName)}
                        <xcolab:proposalLink proposal="${baseProposal}" escape="true" />
                        from ${contestType.contestName}
                        <xcolab:contestLink contest="${baseContest}" />
                        to ${contestType.contestName}
                        <xcolab:contestLink contest="${contest}" />.
                    </p>
                </c:when>
                <c:when test="${not empty baseProposal}">
                    <p>
                        You're about to create a ${fn:toLowerCase(contestType.proposalName)} that will be based on
                        <xcolab:proposalLink proposal="${baseProposal}" escape="true" />.
                    </p>
                </c:when>
            </c:choose>
            <p>
                <c:if test="${showProposalEditHelpText}">
                    Please complete your ${fn:toLowerCase(contestType.proposalName)} based on the template below.
                    If you have input on the template, please send it in a <a href="/feedback" target="_blank">feedback message</a>.
                    To save your ${fn:toLowerCase(contestType.proposalName)}, you must agree to the <a href="${contestType.rulesPageUrl}" target="_blank">${contestType.rulesPageName}</a>
                    and <a href="/wiki/Terms+of+use" target="_blank">Terms of use</a>.
                </c:if>

                <br/>
                In the past, users have occasionally lost work while inputting text into this form.
                To prevent this, we recommend that you either (a) prepare your text offline before copying and pasting it into the form or (b) use the SAVE button right after you begin and save frequently.
                The system will log you out automatically after 2 hours, causing loss of any inputs not previously saved.
            </p>
        </div> <!-- /c-Headline -->


        <form:form action="${saveUrl}" commandName="updateProposalDetailsBean"
                   id="editForm"
                   cssClass="addpropform ${contestType.showProposalSummary ? '' : 'full-wdith'}" >
            <form:hidden path="baseProposalId" />
            <form:hidden path="baseProposalContestId" />
            <form:hidden path="isMove" />
            <form:hidden path="moveType" />
            <form:hidden path="moveFromContestPhaseId" />
            <form:hidden path="moveToContestId" />
            <form:hidden path="uuid" />

            <div class="addpropbox q1">
                <label>
                    <strong class="required-field">
                        <spring:message code="contests.proposal.sections.title" />
                    </strong>
                    <a class="helpTrigger" href="javascript:;"><img src="${_themeImageFolder}/icon-addprop-question.png" width="15" height="15" /></a><br />
                    <spring:message code="contests.proposal.sections.characterlimit" arguments="80"  />
                </label>
                <div class="addprophelp">Give the ${fn:toLowerCase(contestType.proposalName)} a title. It's the first thing most people will see, so you'll want to make it descriptive and engaging.</div>
                <div class="addpropInputContainer ${contestType.showProposalSummary ? '' : 'full-wdith'}">
                    <form:input path="name" id="proposalName" cssClass="form-control" />
                    <form:errors path="name" cssClass="c-Alert c-Alert__error" />
                    <div class="clearfix"><!--  --></div>

                    <div class="clearfix"><!-- --></div>
                    <div class="inputLimitContainer"><span class="limit_characterCount"><!--  --></span>/&#160;<span class="limit_charactersMax">80</span> characters</div>
                </div>
            </div>

            <div class="addpropbox q3">
                <label>
                    <strong class="required-field">${contestType.pitchName}</strong>
                    <a href="javascript:;" class="helpTrigger"><img src="${_themeImageFolder}/icon-addprop-question.png" width="15" height="15" /></a><br />
                    <spring:message code="contests.proposal.sections.characterlimit" arguments="140"  />
                </label>
                <div class="addprophelp">Add a very short (140 character) description that conveys the key idea behind the ${fn:toLowerCase(contestType.proposalName)}.</div>
                <div class="addpropInputContainer ${contestType.showProposalSummary ? '' : 'full-wdith'}">
                    <form:textarea path="pitch" id="proposalPitchInput" htmlEscape="false" cssClass="form-control" />
                    <form:errors path="pitch" />
                    <div class="clearfix"><!-- --></div>
                    <div class="inputLimitContainer">
                        <span class="limit_characterCount"><!--  --></span>/&#160;<span class="limit_charactersMax">140</span> characters
                    </div>
                </div>

                <script>
                    jQuery("textarea#proposalPitchInput").keydown(function(e) {
                        var TABKEY = 9;
                        if(e.keyCode == TABKEY) {
                            this.value += "    ";
                            if(e.preventDefault) {
                                e.preventDefault();
                            }
                            return false;
                        }
                    });
                </script>
            </div>

            <div class="addpropbox blue q2 ${contestType.showTeamField ? '' : 'hidden'}">
                <label>
                <span>
                    <strong><spring:message code="contests.proposal.sections.team"/> </strong>
                    <br /><em>optional</em>
                </span>
                <a class="helpTrigger" href="javascript:;"><img src="${_themeImageFolder}/icon-addprop-question.png" width="15" height="15" /></a><br />
                <spring:message code="contests.proposal.sections.characterlimit" arguments="35" />
                </label>
                <div class="addprophelp">If you'd like to have the ${fn:toLowerCase(contestType.proposalName)} appear under a team name, insert it here. Otherwise, the ${fn:toLowerCase(contestType.proposalName)} will appear under the name of its owner.</div>
                <div class="addpropInputContainer ${contestType.showProposalSummary ? '' : 'full-wdith'}">
                    <form:input path="team" id="proposalTeam" cssClass="form-control" />
                    <form:errors path="team" />

                    <div class="clearfix"><!-- --></div>
                    <div class="inputLimitContainer"><span class="limit_characterCount"><!--  --></span>/&#160;<span class="limit_charactersMax">35</span> characters</div>
                </div>
                <c:if test="${userTeams.size() > 0}">
                    <div class="addprophelp">Alternatively, you can select your team here.</div>

                    <div class="addpropInputContainer ${contestType.showProposalSummary ? '' : 'full-wdith'}">
                        <form:select path="selectedTeam" items="${userTeams}" itemLabel="name" itemValue="id_" />
                        <form:errors path="selectedTeam" />
                    </div>
                </c:if>
            </div>
            <c:if test="${contestType.showTeamField}">
                <div class="notation">Note: If you enter a team name, it will replace the ${fn:toLowerCase(contestType.proposalName)} owner's name in the Author field.</div>
            </c:if>

            <c:if test="${showImageUpload}">
                <div class="addpropbox blue">
                    <label>
                        <span>
                            <strong>${contestType.proposalName} image</strong><br />
                        </span>
                    </label>

                    <form:hidden path="imageId" id="proposalImageId" />
                    <xcolab:imageUpload uniqueName="proposalImageUpload" imageIdInput="proposalImageId"
                                        compactView="true" defaultImageId="${contest.defaultProposalLogoId}" defaultImage="PROPOSAL" buttonText="Upload an image" />
                </div>
            </c:if>

            <!-- legacy for old proposals-->
            <c:if test="${fn:length(proposal.description) gt 0}">
                <div class="addpropbox q3">
                    <label>
                        <strong>Description</strong>
                        <a href="javascript:;" class="helpTrigger"><img src="${_themeImageFolder}/icon-addprop-question.png" width="15" height="15" /></a><br />
                    </label>

                    <div class="addpropInputContainer ${contestType.showProposalSummary ? '' : 'full-wdith'}">
                        <form:textarea cssClass="rte-editorPlaceholder"  cols="54" rows="7" path="description" />
                    </div>
                </div>
            </c:if>

            <c:forEach var="section" items="${proposal.sections }">
                <c:if test="${not section.locked }">
                    <c:choose>
                        <c:when test="${section.type == 'SECTION_HEADER' }">
                            <h4>${section.title}</h4>
                        </c:when>
                        <c:otherwise>
                            <div class="addpropbox q3 ${section.type}" data-section-id="${section.sectionDefinitionId }">
                                <proposalsPortlet:proposalSectionEdit section="${section }" showCopySectionContentButton="${hasUnmappedSections and not empty baseProposal }"/>
                            </div>
                        </c:otherwise>
                    </c:choose>
                </c:if>
            </c:forEach>
        </form:form>
    </div>
    <jsp:directive.include file="./proposalDetails/proposalSummary.jspx" />

    <c:set var="acceptTosModalTitle">
        By saving your ${fn:toLowerCase(contestType.proposalName)} you are entering the ${_colabName} ${contestType.contestName} and agree to the
        <a href="/wiki/Terms+of+use" target="_blank">Terms of Use</a>
        and <a href="${contestType.rulesPageUrl}">${contestType.rulesPageName}</a>.
    </c:set>
    <xcolab:modal modalId="acceptTosModal" title="${acceptTosModalTitle}" size="lg">
        <div class="modal-body">
            <h5>${fn:toUpperCase(contestType.rulesPageName)}:</h5>
            <div class="c-Scrollable c-Scrollable--visibleScrollbar" style="height:260px;">
                ${preferences.termsOfService}
            </div>
        </div>
        <div class="modal-footer">
            <button class="c-Button__primary" id="tosAccepted">ACCEPT</button>
            <button class="c-Button__secondary" id="closeAcceptTos">DO NOT Accept</button>
        </div>
    </xcolab:modal>

    <xcolab:modal modalId="invalidFieldsModal" title="The following sections have too many characters:">
        <div class="modal-body">
            <ul id="invalidFieldsList"><!--  --></ul>
        </div>
        <div class="modal-footer">
            <button type="close" data-dismiss="modal" class="c-Button__secondary">CLOSE</button>
        </div>
    </xcolab:modal>

    <div class="c-ControlsOverlay">
        <div class="bs-container-fixed">
            <div class="pull-left hidden-xs hidden-sm">
                Don't forget to save your work!
                <c:if test="${not empty saveHelpText}">
                    ${saveHelpText}
                </c:if>
            </div>

            <div class="pull-right-lg">
                <button class="c-Button__primary" type="button" id="saveChangesButton">
                    ${saveButtonText}
                </button>
                <c:choose>
                    <c:when test="${proposal.currentVersion > 0 }">
                        <xcolab:proposalLink proposal="${proposal}" cssClass="c-Button__secondary"
                                             linkId="discardChangesButton" text="DISCARD changes" edit="false" />
                    </c:when>
                    <c:otherwise>
                        <!--  proposal creation, return to contest proposals page on discard -->
                        <xcolab:contestLink contest="${contest}" cssClass="c-Button__secondary"
                                            linkId="discardChangesButton" text="DISCARD changes" />
                    </c:otherwise>
                </c:choose>
            </div>
        </div>
    </div>
    <div id="ckImageUploadTooltip" style="display: none">
        ${requestScope.imageUploadHelpText}
    </div>
    <div id="ckAnchorTooltip" style="display: none">
        <h4>Anchor:</h4>
        <h5>How to use anchors:</h5>
        <br/>
        <ol>
            <li>You would like to link to another section of your proposal.</li>
            <li>Highlight the text you would like to link to, and click the anchor icon <span style="background-image:url('https://cdnjs.cloudflare.com/ajax/libs/ckeditor/4.6.1/plugins/icons_hidpi.png?t=GB8B');background-position:0 -1296px;background-size:16px;background-color: white;width: 16px;height: 16px;float: left;display: inline-block;margin-left: 4px;margin-right: 4px;">&#160;</span>(flag) to insert an anchor. Select a name for the anchor and click o.k. The anchor icon will now appear in that location.</li>

            <li> Next, select and highlight the text you would like to have link to this newly created anchor.</li>

            <li>Click on the hyperlink icon <span style="background-image:url('https://cdnjs.cloudflare.com/ajax/libs/ckeditor/4.6.1/plugins/icons_hidpi.png?t=GB8B');background-position:0 -1320px;background-size:16px;background-color: white;width: 16px;height: 16px;float: left;display: inline-block;margin-left: 4px;margin-right: 4px;">&#160;</span>(chains) , and use the "link type" selection menu to select "link to anchor in text."</li>
            <li>Using the "select an anchor" menu, use the "select by anchor name" to select the correct anchor from the list to link to. Click o.k.</li>
            <li>Now clicking in on the hyperlink will bring the user to the anchored section.</li>
        </ol>
    </div>
    <iframe name="_fileUploadFrame" id="fileUploadFrame" class="hidden" style="display: none;"><!-- comment --></iframe>

    <!-- TODO: replace with i18n message -->
    <c:set var="acceptTosNotificationText" value="To create a ${contestType.proposalName} on the ${_colabName}, you must ACCEPT the terms of use and ${contestType.contestName} rules. Please click Accept to continue and save your ${contestType.proposalName}!" />
    <script>
        var acceptTosNotificationText = '${acceptTosNotificationText}';
    </script>

    <script>
        var submitTimer;

        function showAcceptTosPopup() {
            jQuery('#acceptTosModal').modal('show');
        }

        function closeAcceptTosPopup() {
            jQuery('#acceptTosModal').modal('hide');
            noty({text: acceptTosNotificationText,
                buttons: [
                    {
                        addClass: 'c-Button__primary', text: 'ACCEPT', onClick: function($noty)
                    {
                        tosAcceptedSave();
                        $noty.close();
                    }
                    }],
                    type: 'error'});
            enableButtons();
        }

        function tosAcceptedSave() {
            jQuery('#acceptTosModal').modal('hide');
            disableButtons(true);
            saveIfValid();
        }

        function saveIfValid() {
            if(jQuery("#proposalPitchInput").length ==1 ){
                if(jQuery("#proposalPitchInput").val() == 0) {
                    noty({text: 'The "pitch" field is required. Please enter a short (up to 140 character) message that conveys the main idea of your proposal.', type: 'error',timeout: 10000,});
                    jQuery("#proposalPitchInput").focus();
                    enableButtons();
                    return;
                }
            }
            if(jQuery("#proposalName").length ==1 ){
                if(jQuery("#proposalName").val() == 0) {
                    noty({text: 'The "title" field is required. It\'s the first thing most people will see, so you\'ll want to make it descriptive and engaging.', type: 'error',timeout: 10000,});
                    jQuery("#proposalName").focus();
                    enableButtons();
                    return;
                }
            }
            disableButtons();
            if (validatePlanEditForm()) {
                disableDirtyCheck();
                if(getMustFilterContent()) {
                    var text = "";
                    text = text + $("#proposalName").val() + " ";
                    text = text + $("#proposalTeam").val() + " ";
                    text = text + $("#proposalPitchInput").val() + " ";
                    for (var ckInstanceId in CKEDITOR.instances) {
                        if (document.getElementById(ckInstanceId)) {
                            var ckInstance = CKEDITOR.instances[ckInstanceId];
                            text = text + (ckInstance.getData()) + " ";
                        }
                    }
                    handleFilteredContent(text,"PROPOSAL", "#uuid",function () { jQuery("#editForm").submit() });
                }else {
                    jQuery("#editForm").submit();
                }
            }
        }

        jQuery(function() {
            jQuery("#saveChangesButton").click(function() {
                if (currentProposal.proposalId > 0) {
                    disableButtons(true);
                    saveIfValid();
                }
                else {
                    disableButtons(false);
                    showAcceptTosPopup();
                }
            });

            jQuery("#closeAcceptTos").click(closeAcceptTosPopup);
            jQuery("#tosAccepted").click(tosAcceptedSave);

            enableDirtyCheck();
        });

        function enableButtons() {
            jQuery("#saveChangesButton,#discardChangesButton").removeClass("disabled");
        }

        function disableButtons(withTimeout) {
            var buttons = jQuery("#saveChangesButton,#discardChangesButton");
            buttons.addClass("disabled");

            if (withTimeout) {
                setTimeout(function () {
                    buttons.removeClass("disabled");
                }, 5000);
            }
        }
    </script>

    <xcolab:modal modalId="copyProposalModal" size="lg"
                  title="Choose section from base ${contestType.proposalNameLowercase}, which content you want to copy">
        <div class="modal-body">
            <div id="copyProposalPopupContent" style="overflow: auto; height: 50vh">
                <div id="copyProposalContests"><!--  --></div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="close" data-dismiss="modal" class="c-Button__secondary">Cancel</button>
        </div>
    </xcolab:modal>

    <c:choose>
    <c:when test="${mustFilterContent}">
        <script>
            function getMustFilterContent() {
                return true;
            }
        </script>
    </c:when>
    <c:otherwise>
        <script>
            function getMustFilterContent() {
                return false;
            }
        </script>
    </c:otherwise>
    </c:choose>

    <xcolab:requireLibrary name="CKEditor" />

    <c:if test="${isMove}">
        <xcolab:script src="${_themeJsFolder}/proposals/copyProposalWidget.js"/>
    </c:if>

    <c:if test="${hasProposalPicker}">
        <jsp:directive.include file="./proposalDetails/proposalPicker_widget.jspx" />
    </c:if>
</xcolab:layout>
</jsp:root>
