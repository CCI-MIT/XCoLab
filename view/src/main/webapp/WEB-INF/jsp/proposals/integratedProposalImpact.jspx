<jsp:root version="2.1" xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:fn="http://java.sun.com/jsp/jstl/functions"
          xmlns:proposalsPortlet="urn:jsptagdir:/WEB-INF/tags/proposalsPortlet"
          xmlns:modeling="urn:jsptagdir:/WEB-INF/tags/modeling"
          xmlns:collab="http://climatecolab.org/tags/xcolab_1.0"
          xmlns:xcolab="urn:jsptagdir:/WEB-INF/tags"
          xmlns:form="http://www.springframework.org/tags/form">

    <jsp:directive.include file="./init_proposal_tab.jspx"/>

    <jsp:directive.page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"/>
    <xcolab:layout title="${proposal.name} - Impact">
        <!--@elvariable id="isGlobalContest" type="java.lang.Boolean"-->
        <!--@elvariable id="isRegionalContest" type="java.lang.Boolean"-->
        <!--@elvariable id="modelId" type="java.lang.Long"-->
        <!--@elvariable id="scenarioId" type="java.lang.Long"-->
        <!--@elvariable id="isProposalUsingCombinedScenario" type="java.lang.Boolean"-->
        <!--@elvariable id="consolidatedModelId" type="java.lang.Long"-->
        <!--@elvariable id="consolidatedScenarioId" type="java.lang.Long"-->
        <!--@elvariable id="edit" type="java.lang.Boolean"-->
        <!--@elvariable id="availableModels" type="java.util.Map<java.lang.Long, java.lang.String>"-->
        <!--@elvariable id="isRegionalSectorContest" type="java.lang.Boolean"-->
        <!--@elvariable id="showSubProposalListing" type="java.lang.Boolean"-->
        <!--@elvariable id="consolidateOptions" type="java.util.Map<java.lang.String, java.lang.String[]>"-->
        <!--@elvariable id="proposalToModelMap" type="java.util.Map<java.lang.String, org.xcolab.view.pages.proposals.impact.ProposalSimulationScenarioRegionWrapper>"-->
        <!--@elvariable id="impactIterations" type="java.util.List<org.xcolab.client.contest.pojo.impact.ImpactIteration>"-->
        <!--@elvariable id="impactSerieses" type="java.util.List<org.xcolab.view.pages.proposals.impact.ProposalImpactSeries>"-->

        <jsp:directive.include file="./proposalDetails/header.jspx"/>

        <div class="alert alert-info my-2 d-lg-none">
            This page is best viewed on a device with a larger screen.
        </div>

        <div>
            <c:if test="${not empty isGlobalContest and isGlobalContest or not empty isRegionalContest and isRegionalContest}">

                <c:set var="modelId" value="${modelId}"/>
                <c:set var="scenarioId" value="${scenarioId }"/>

                <c:choose>
                    <c:when test="${isProposalUsingCombinedScenario}">
                        <c:if test="${not empty consolidatedModelId}">
                            <c:set var="modelToLoadId" value="${consolidatedModelId}"/>
                        </c:if>

                        <c:if test="${not empty consolidatedScenarioId}">
                            <c:set var="scenarioToLoadId" value="${consolidatedScenarioId}"/>
                        </c:if>
                    </c:when>
                    <c:otherwise>
                        <c:set var="modelToLoadId" value="${modelId}"/>
                        <c:set var="scenarioToLoadId" value="${scenarioId}"/>
                    </c:otherwise>
                </c:choose>


                <c:choose>
                    <c:when test="${edit and (modelId > 0 or scenarioId > 0)}">
                        <c:if test="${not empty consolidateOptions }">
                            <proposalsPortlet:modelSettingsPicker consolidateOptions="${consolidateOptions }"
                                                                  contestId="${contest.id }"
                                                                  modelId="${modelId}"
                                                                  scenarioId="${scenarioId}"
                                                                  consolidatedScenarioId="${consolidatedScenarioId }"
                                                                  consolidatedModelId="${consolidatedModelId }"/>

                            <div id="proposalToModelMap" class="c-Box c-Box--colorTan" style="display: none;">
                                <div class="c-Box__body">
                                    <c:if test="${not empty proposalToModelMap}">
                                        <div class="alert alert-danger">
                                            In order to use the values from your regional plans here, all the regional plans
                                            need to use the same modeling engine, and you must include a regional plan for all
                                            the regions.
                                        </div>
                                        <table>
                                            <col span="1" class="wideColumn"/>
                                            <col span="1" class="smallColumn"/>
                                            <col span="1" class="smallColumn"/>
                                            <col span="1" class="smallColumn"/>
                                            <thead>
                                            <tr>
                                                <th>Region</th>
                                                <th>Proposal</th>
                                                <th>Model</th>
                                                <!-- <th>Scenario</th> -->
                                            </tr>
                                            </thead>
                                            <tbody>

                                            <c:forEach items="${proposalToModelMap}" var="proposalToModel">
                                                <tr>
                                                    <td>${proposalToModel.value.region}</td>
                                                    <td>
                                                        <c:choose>
                                                            <c:when test="${not empty proposalToModel.value.proposalUrl}">
                                                                <a href="${proposalToModel.value.proposalUrl}"
                                                                   target="_blank">${proposalToModel.value.proposalName}</a>
                                                            </c:when>
                                                            <c:otherwise>
                                                                ${proposalToModel.value.proposalName}
                                                            </c:otherwise>
                                                        </c:choose>
                                                    </td>
                                                    <td>${proposalToModel.value.simulation}</td>
                                                    <!-- <td>${proposalToModel.value.scenario}</td> -->
                                                </tr>
                                            </c:forEach>
                                            </tbody>
                                        </table>
                                    </c:if>
                                </div>
                            </div>

                        </c:if>

                        <c:if test="${not empty availableModels }">
                            <div id="modelPickerDiv">
                                <proposalsPortlet:modelPicker availableModels="${availableModels }"
                                                              contestId="${contest.id }" modelId="${modelToLoadId}"/>
                            </div>
                        </c:if>


                        <modeling:simulationEdit scenarioId="${scenarioToLoadId }"
                                                 modelId="${modelToLoadId }"
                                                 contestModelDefaultSetting="${contest.defaultModelSettings}"
                                                 isRegionalContest="${isRegionalContest}"
                                                 proposalRegion="${proposal.modelRegion}"
                                                 modelRegions="${proposal.allModelRegions}"/>


                        <c:set var="updateProposalScenarioURL" value="${proposal.proposalUrl}/tab/IMPACT" />

                        <form:form action="${updateProposalScenarioURL}" id="updateProposalScenarioForm" method="post">
                            <input type="text" id="proposalScenarioId" name="scenarioId" class="hidden"/>
                            <input type="text" id="scenarioModelId" name="modelId" class="hidden"/>
                            <input type="text" id="isConsolidatedScenario" name="isConsolidatedScenario" class="hidden"/>
                            <input type="text" id="proposalModelRegion" name="region" class="hidden"
                                   value="${proposal.modelRegion}"/>
                        </form:form>

                        <div class="c-ControlsOverlay">
                            <div class="container">
                                <p>
                                    <c:choose>
                                        <c:when test="${proposal.currentVersion le 1}">
                                            You are currently editing a new proposal
                                        </c:when>
                                        <c:otherwise>
                                            You are editing a proposal
                                        </c:otherwise>
                                    </c:choose>
                                    <br/>
                                    <c:if test="${not empty proposal.name }">"${proposal.name}"</c:if>
                                </p>

                                <a class="btn btn-primary" href="#" id="saveChangesButton">SAVE and PUBLISH
                                    changes</a>
                                <c:choose>
                                    <c:when test="${proposal.currentVersion > 0 }">
                                        <xcolab:proposalLink proposal="${proposal}" cssClass="btn btn-gray"
                                                             linkId="discardChangesButton"
                                                             text="DISCARD changes"/>
                                    </c:when>
                                    <c:otherwise>
                                        <!--  proposal creation, return to contest proposals page on discard -->
                                        <xcolab:contestLink contest="${contest }" cssClass="btn btn-gray"
                                                            linkId="discardChangesButton"
                                                            text="DISCARD changes"/>
                                    </c:otherwise>
                                </c:choose>
                            </div>
                        </div>
                    </c:when>
                    <c:when test="${modelId > 0 and scenarioId > 0}">
                        <div id="modelContent">
                            <modeling:simulationView scenarioId="${scenarioId }" modelId="${modelId }"
                                                     contestModelDefaultSetting="${contest.defaultModelSettings}"/>
                        </div>
                    </c:when>
                    <c:when test="${modelId > 0 or scenarioId > 0}">
                        <div id="modelContent">
                            <div class="alert alert-warning"><h3>
                                The proposal author(s) have not yet estimated the emission impacts of this proposal.
                            </h3></div>
                        </div>
                    </c:when>
                    <c:otherwise>
                        <div id="modelContent">
                            <div class="alert alert-danger">
                                No modeling engine is configured for this contest. Please contact the administrator.
                            </div>
                        </div>
                    </c:otherwise>
                </c:choose>

            </c:if>



            <!-- TODO show fallback Graph -->
            <div id="impact-chart"> &#160;</div>
            <div class="clear"><!--  --></div>
            <br/>
            <br/>

            <c:if test="${showDataTable}">
                <div id="impact" class="c-ContentBox">
                    <h2 class="model_name">Regional
                        <c:if test="${not empty isRegionalSectorContest and isRegionalSectorContest}">
                            Sector
                        </c:if>
                        Plan Impact, By Sector</h2>
                    <table>
                        <thead>
                        <tr>
                            <th><!-- --></th>
                            <th class="blue-bg" style="text-align: center" colspan="${fn:length(impactIterations)}">
                                Proposal’s Greenhouse Gas Emission Reductions, Per Decade [GtCO2e]
                                <a class="ml-1" data-toggle="collapse" href="#js-Help__heading">
                                    <collab:image src="/images/icon-addprop-question.png" width="15" height="15" />
                                </a>

                                <div class="p-Proposal__formBox__helpText collpase show js-Help" id="js-Help__heading" style="color:white;">
                                    This table shows a summary of the emission reductions for all sectors and regions
                                    you submitted, in gigatons of carbon dioxide (CO2) equivalent (GtCO2e), for each
                                    decade listed.
                                    <a target='_blank' style="color: rgb(85, 26, 139)"
                                       href="/resources/-/wiki/Main/Assessing+the+impact+of+your+proposal+or+plan">
                                        Click here for more information.
                                    </a>
                                </div>
                                <div class="clearfix"><!-- --></div>
                            </th>
                        </tr>
                        </thead>
                        <tr>
                            <td class="blue-bg" style="text-align: left">Sector
                                <a class="ml-1" data-toggle="collapse" href="#js-Help__sectorHeading">
                                    <collab:image src="/images/icon-addprop-question.png" width="15" height="15" />
                                </a>

                                <div class="p-Proposal__formBox__helpText collapse show js-Help" id="js-Help__sectorHeading" style="color:white;">
                                    This table shows a summary of the emission reductions for all sectors and regions
                                    you submitted, in gigatons of carbon dioxide (CO2) equivalent (GtCO2e), for each
                                    decade listed.
                                </div>
                            </td>
                            <c:forEach var="impactIteration" items="${impactIterations}">
                                <th class="blue-bg" style="text-align: center;">${impactIteration.year}</th>
                            </c:forEach>
                        </tr>
                        <!-- TODO: where is impactSeries defined?-->
                        <c:forEach var="seriesEntry" items="${impactSeries.seriesTypeToAggregatedSeriesMap}"
                                   varStatus="index">
                            <tr id="series${fn:replace(impactSeries.seriesTypeToDescriptionMap[seriesEntry.key],' ', '')}">
                                <modeling:impactSeriesDataRow
                                        seriesName="${impactSeries.seriesTypeToDescriptionMap[seriesEntry.key]}"
                                        seriesValues="${impactSeries.seriesTypeToAggregatedSeriesMap[seriesEntry.key]}"
                                        impactIterations="${impactIterations}"
                                        seriesNameClass="${fn:containsIgnoreCase(impactSeries.seriesTypeToDescriptionMap[seriesEntry.key], 'Business as usual') ?
                                        'blue-bg' : 'sector'}"/>
                            </tr>
                            <c:if test="${fn:containsIgnoreCase(impactSeries.seriesTypeToDescriptionMap[seriesEntry.key], 'Business as usual')}">
                                <tr>
                                    <td class="blue-bg" style="text-align: left">Emission reductions from BAU (by sector)
                                    </td>
                                    <td class="impact-value"><!-- --></td>
                                    <td class="impact-value"><!-- --></td>
                                    <td class="impact-value"><!-- --></td>
                                    <td class="impact-value"><!-- --></td>
                                </tr>
                            </c:if>
                        </c:forEach>
                        <tr id="totalSectors">
                            <modeling:impactSeriesDataRow
                                    seriesName="Total emission reductions"
                                    seriesValues="${impactSeries.resultSeriesValues}"
                                    impactIterations="${impactIterations}"
                                    seriesNameClass="sector italic"/>
                        </tr>
                        <tr id="totalProjectedEmissions">
                            <modeling:impactSeriesDataRow
                                    seriesName="Total projected emissions"
                                    seriesValues="${impactSeries.resultSeriesValues}"
                                    impactIterations="${impactIterations}"
                                    seriesNameClass="total blue-bg"/>
                        </tr>
                        <c:if test="${empty isRegionalSectorContest or not isRegionalSectorContest}">
                            <tr id="modelAdjustments">
                                <modeling:impactSeriesDataRow
                                        seriesName="Adjustments to total, to correspond with model results"
                                        seriesValues="${impactSeries.resultSeriesValues}"
                                        impactIterations="${impactIterations}"
                                        seriesNameClass="italic"/>
                            </tr>
                            <tr id="modelTotal">
                                <modeling:impactSeriesDataRow
                                        seriesName="Total from model"
                                        seriesValues="${impactSeries.resultSeriesValues}"
                                        impactIterations="${impactIterations}"
                                        seriesNameClass="model total"/>
                            </tr>
                        </c:if>

                        <c:if test="${not empty showSubProposalListing and showSubProposalListing}">
                            <tr>
                                <c:choose>
                                    <c:when test="${empty proposal.team}">
                                        <td colspan="5">${proposal.author.screenName}'s proposal portfolio sum is an
                                            aggregation of the following proposals:
                                        </td>
                                    </c:when>
                                    <c:otherwise>
                                        <td colspan="5">${proposal.team}'s proposal portfolio sum is an aggregation of the
                                            following proposals:
                                        </td>
                                    </c:otherwise>
                                </c:choose>
                            </tr>
                            <c:forEach var="impactSeries" items="${impactSerieses}" varStatus="index">
                                <tr class="impact-series-clickable" id="impact-row-${index.index}">
                                    <td class="region">
                                        ${impactSeries.proposalWrapper.name}
                                <span
                                        id="${impactSeries.whereTerm.id}">(region: ${impactSeries.whereTerm.name}, </span>
                                <span
                                        id="${impactSeries.whatTerm.id}">sector: ${impactSeries.whatTerm.name})</span></td>
                                    <c:forEach var="impactIteration" items="${impactIterations}">
                                        <td class="impact-value">${impactSeries.resultSeriesValues.yearToValueMap[impactIteration.year]}</td>
                                    </c:forEach>
                                </tr>
                            </c:forEach>
                        </c:if>
                    </table>
                </div>
            </c:if>
        </div>
        <div class="impactComments">
            <c:if test="${edit}">
                <div>
                    <c:if test="${canCommentAsAuthor}">
                        <div class="c-Box c-Box--colorTan q1">
                            <div class="c-Box__body">
                                <label for="impactAuthorComment_text_area">
                                    <strong>Comments from Author </strong>
                                </label>
                                <p>
                                    Give your comments for your proposal's estimation of impact.
                                </p>
                                <textarea id="impactAuthorComment_text_area">
                                    <c:if test="${not empty authorComment}">${authorComment.stringValue}</c:if>
                                </textarea>
                            </div>
                        </div>
                    </c:if>
                    <c:if test="${canCommentAsIAF}">
                        <div class="c-Box c-Box--colorTan q1">
                            <div class="c-Box__body">
                                <label for="impactIAFComment_text_area">
                                    <strong>Comments from Impact Assessment Fellow</strong>
                                </label>
                                <p>
                                    Give your comments to provide reasons or aditional data for the estimation of the proposal's impact.
                                </p>
                                <textarea  id="impactIAFComment_text_area">
                                    <c:if test="${not empty iafComment}">
                                        ${iafComment.stringValue}
                                    </c:if>
                                </textarea>
                            </div>
                        </div>
                    </c:if>
                </div>

            </c:if>
            <c:if test="${ not edit}">
                <c:if test="${not empty authorComment}">
                    <h3>Comments from Author</h3>
                    <p>${authorComment.stringValue}</p>
                </c:if>
                <c:if test="${not empty iafComment}">
                    <h3>Comments from Impact Assessment Fellow</h3>
                    <p>${iafComment.stringValue}</p>
                </c:if>
            </c:if>
        </div>
        <c:if test="${edit}">
            <script>
                <![CDATA[
                jQuery("#saveChangesButton").click(function () {
                    jQuery("#proposalScenarioId").val(jQuery("#modelingScenarioId").val());
                    jQuery("#scenarioModelId").val(jQuery("#modelingModelId").val());
                    var $authorCommentTextarea = jQuery("#impactAuthorComment_text_area");
                    if ($authorCommentTextarea) {
                        jQuery('<input/>').attr({
                            type: 'hidden',
                            id: 'impactAuthorComment',
                            name: 'impactAuthorComment'
                        }).appendTo('#updateProposalScenarioForm');
                        jQuery("#impactAuthorComment").val($authorCommentTextarea.val());
                    }
                    var $iafCommentTextarea = jQuery("#impactIAFComment_text_area");
                    if ($iafCommentTextarea) {
                        jQuery('<input/>').attr({
                            type: 'hidden',
                            id: 'impactIAFComment',
                            name: 'impactIAFComment'
                        }).appendTo('#updateProposalScenarioForm');
                        jQuery("#impactIAFComment").val($iafCommentTextarea.val());
                    }

                    disableDirtyCheck();
                    jQuery("#updateProposalScenarioForm").submit();
                });

                jQuery(function () {
                    enableDirtyCheck();
                });
                ]]>
            </script>

        </c:if>
        <script>
            jQuery(function() {
                enableDirtyCheck();
            });
        </script>

        <script>
            var MODEL_DATA_ROW = "GHG emissions";

            /*
             - Emissions from energy
             - Emissions from land use
             - Other GHG emissions

             - Energy/Industry CO2 emissions
             - Land Use CO2 emissions
             */

            function mapValuesToYear(row) {
                var modelTotalValues = row.querySelectorAll('[data-attr-year]');
                var map = {};
                [].forEach.call(modelTotalValues, function (totalYearValue) {
                    var year = totalYearValue.getAttribute("data-attr-year");
                    map[year] = parseFloat(totalYearValue.innerHTML).toFixed(2);
                });
                return map;
            }

            function calculateAverage(modelSeriesList) {
                var averageSeries = {variable: {values: []}};
                var seriesCount = modelSeriesList.length;
                modelSeriesList.forEach(function (series) {
                    var modelSeriesValues = series.variable.values;
                    var valueIndex = 0;
                    modelSeriesValues.forEach(function (modelSeriesValue) {
                        if (typeof(averageSeries.variable.values[valueIndex]) === 'undefined') {
                            averageSeries.variable.values.push([0, 0]);
                            averageSeries.variable.values[valueIndex][0] = modelSeriesValue[0];
                        }
                        averageSeries.variable.values[valueIndex][1] += modelSeriesValue[1] / seriesCount;
                        valueIndex++;
                    });
                });
                return averageSeries;
            }

            var scenarioFetchedCallback = function (event) {
                selectModelForFetchedScenario(event);
                var modelOutputs = event.scenario.outputs;

                var bauRow = document.getElementById("seriesBusinessasusual(BAU)");
                var totalSectorsRow = document.getElementById("totalSectors");

                if (!!bauRow &amp;&amp; !!totalSectorsRow) {
                    var bauValuesToYears = mapValuesToYear(bauRow);
                    var totalSectorsValuesToYears = mapValuesToYear(totalSectorsRow);
                } else return;

                var totalProjectedEmissionsRow = document.getElementById("totalProjectedEmissions");
                if (totalProjectedEmissionsRow) {
                    var totalProjectedEmissionsValues = totalProjectedEmissionsRow.querySelectorAll('[data-attr-year]');
                    var totalProjectedEmissionsValuesToYears = {};
                    [].forEach.call(totalProjectedEmissionsValues, function (totalProjectedEmissionsYearValue) {
                        var year = totalProjectedEmissionsYearValue.getAttribute("data-attr-year");
                        totalProjectedEmissionsValuesToYears[year] = parseFloat(bauValuesToYears[year]) - parseFloat(totalSectorsValuesToYears[year]);
                        totalProjectedEmissionsYearValue.innerHTML = totalProjectedEmissionsValuesToYears[year].toFixed(2);
                    });
                } else return;

                var modelSeriesValuesToYears = {};
                modelOutputs.forEach(function (modelOutput) {
                    if (modelOutput.name.toLowerCase() === MODEL_DATA_ROW.toLowerCase()) {
                        var modelSeries;
                        if (event.scenario.modelName.toLowerCase().includes("emf")) {
                            modelSeries = calculateAverage(modelOutput.series);
                        } else {
                            modelSeries = modelOutput.series[0];
                        }
                        var modelSeriesValues = modelSeries.variable.values;
                        modelSeriesValues.forEach(function (modelSeriesValue) {
                            modelSeriesValuesToYears[modelSeriesValue[0]] = modelSeriesValue[1]*1000.0;
                        });
                    }
                });

                var modelTotalRow = document.getElementById("modelTotal");
                var modelTotalValues = modelTotalRow.querySelectorAll('[data-attr-year]');
                [].forEach.call(modelTotalValues, function (totalYearValue) {
                    var year = totalYearValue.getAttribute("data-attr-year");
                    totalYearValue.innerHTML = parseFloat(modelSeriesValuesToYears[year]).toFixed(2);
                });

                var modelAdjustmentsRow = document.getElementById("modelAdjustments");
                var modelAdjustmentValues = modelAdjustmentsRow.querySelectorAll('[data-attr-year]');
                [].forEach.call(modelAdjustmentValues, function (modelAdjustmentValue) {
                    var year = modelAdjustmentValue.getAttribute("data-attr-year");
                    modelAdjustmentValue.innerHTML = (parseFloat(modelSeriesValuesToYears[year]) - parseFloat(totalProjectedEmissionsValuesToYears[year])).toFixed(2);
                });
            };

            var scenarioFetchedCallbackRegistered = false;
            function registerScenarioFetchedCallback() {
                var $modelsOutputContainerElement = $("#modelsOutputContainer");
                if (jQuery($modelsOutputContainerElement.data('modeling')).length !== 0) {
                    scenarioFetchedCallbackRegistered = true;
                    jQuery($modelsOutputContainerElement.data('modeling')).on('scenarioFetched', scenarioFetchedCallback);
                }
            }

            registerScenarioFetchedCallback();

            jQuery(function () {
                if (!scenarioFetchedCallbackRegistered) {
                    registerScenarioFetchedCallback();
                }
            });
        </script>
    </xcolab:layout>
</jsp:root>
