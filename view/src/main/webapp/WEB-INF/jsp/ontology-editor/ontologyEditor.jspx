<jsp:root version="2.1" xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:xcolab="urn:jsptagdir:/WEB-INF/tags" >
<jsp:directive.page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"/>
<xcolab:layout>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqtree/1.3.6/tree.jquery.min.js"><!-- --></script>
    <xcolab:requireLibrary name="jQuery UI" />
    <xcolab:requireLibrary name="spin.js" />
    <xcolab:script src="${_libJsFolder}/jquery.loadmask.spin.js" />
    <style>

        .contentEditor input {border: 1px solid #DDD; color: #8d8d8d;  font-weight: 200;  margin-bottom: 7px; height: 30px;  font-size: large;  width: 530px;}
        .contentBody {margin: auto; width: 1022px;  height: 742px;}
        .treeContainer {        height: 561px; overflow-y: scroll;}
        #infoBox {padding: 8px 35px 8px 14px;margin-bottom: 20px;}
        .colFloatLef{float:left}
        #tree-view{width:450px}
        #saveArticle{cursor:pointer}
        #articleURL{overflow:hidden}
        #anchorArticleURL{display: block; width:0; white-space: nowrap;}
    </style>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqtree/1.3.6/jqtree.min.css"><!-- --></link>

    <xcolab:stylesheet href="${_libCssFolder}/jquery.loadmask.spin.css" />

    <c:set var="ontologyListFolderURL" value="/ontology-editor/ontologyEditorList">
    </c:set>


    <c:set var="getOntologyTermURL" value="/ontology-editor/ontologyEditorGetOntologyTerm">
    </c:set>

    <c:set var="saveOntologyTermURL" value="/ontology-editor/saveOntologyTerm">
    </c:set>

    <c:set var="deleteOntologyTermURL" value="/ontology-editor/deleteOntologyTerm">
    </c:set>

    <c:set var="focusAreaEditorURL" value="/ontology-editor/focusAreaEditor">
    </c:set>

    <script>
        <![CDATA[
        var getOntologyTermURL = '${getOntologyTermURL}';
        var saveOntologyTermURL = '${saveOntologyTermURL}';
        var deleteOntologyTermURL = '${deleteOntologyTermURL}';



        var ckEditor = null;
        var THRESHOLD_TO_AVOID_NODE_COLISION = 1000;
        jQuery(function () {
            $("#deleteOntologyTerm").hide();
            $("#article-view").mask({'label':"Please click on an Ontology term or <br/>create a new one clicking on the add new term link!", spinner:false});

            $('#tree-view').tree({
                                     //data:data,
                                     saveState: true,
                                     onCanSelectNode: function(node) {
                                         //if(node.kind == "folder") return false;
                                            return true;

                                     },
                                     onCreateLi: function(node, $li) {
                                         // Append a link to the jqtree-element div.
                                         // The link has an url '#node-[id]' and a data property 'node-id'.
                                         if(node.kind == "folder") {
                                             $li.find('.jqtree-element').append(
                                                     '&nbsp;&nbsp;<a href="#node-' + node.id
                                                     + '" class="addArticle" data-node-id="' +
                                                     node.id + '">+ term</a>'
                                             );//<small>
                                         }
                                     },
                                     onCanMoveTo: function(moved_node, target_node, position) {
                                         console.log("target_node "+ target_node.id +" - "+target_node.kind)
                                         if (target_node.kind == "folder") {
                                             return true;
                                         }
                                         else {
                                             return false;
                                         }
                                     },
                                     onCanMove: function(node) {
                                         if (! node.parent.parent) {
                                             // Example: Cannot move root node

                                             return false;
                                         }
                                         else {
                                             if(node.kind == "folder") return false;
                                             else
                                                 return true;
                                         }
                                     },
                                     dragAndDrop: true});

            $('#tree-view').on(
                    'click', '.addArticle',
                    function(e) {
                        // Get the id from the 'node-id' data property
                        var node_id = $(e.target).data('node-id');

                        // Get the node from the tree
                        var node = $('#tree-view').tree('getNodeById', node_id);

                        if (node) {
                            //$('#tree-view').tree('selectNode', node);
                            newOntologyTermAtOntologyTerm(node.id, node.name);
                        }
                        event.preventDefault();
                        return false;
                    }
            );

            $('#tree-view').bind(
                    'tree.click',
                    function(event) {
                        var node = event.node;
                        if(node.kind == "folder"){
                            $("#article-view").unmask();
                            $("#article-view").mask();
                            loadOntologyTerm(node.id, node.parent.name);
                        }else{
                            /*
                            event.preventDefault();
                            return false;*/
                        }
                    }
            );

            $("#infoBox").hide();

            $("#saveOntologyTerm").click(function(){

                    saveOntologyTerm();
            });
            $("#deleteOntologyTerm").click(function(){

                var r = confirm("Are you sure you want to delete this ontology term?!\n All the child terms will also be deleted");
                if (r == true) {
                    deleteOntologyTerm();
                }
            });
            $('#contentArticleTitle').bind('input', function() {
                if ($("#folderName").html().indexOf("Wiki") !== -1) {
                    updateArticleURL("Wiki", $('#contentArticleTitle').val().replace(/ /g,"+"));
                    var input1 = $('#contentArticleTitle');
                    input1.attr("value",$('#contentArticleTitle').val());
                    $("#article-view").unmask()
                }
            });
        });

        function clearForm(){
            $('#ontologyTermId').val("0");
            $('#ontologyTermDescriptionUrl').val("");
            $('#ontologyTermOrder').val(0);
            $('#ontologyTermName').val("");
            $('#ontologySpaceId').val("");
            $('#ontologyTermParentId').val("");
            $("#deleteOntologyTerm").hide();
        }
        function newOntologyTermAtOntologyTerm(folderId, folderName){
            var idz = folderId.split("_");
            $("#article-view").unmask()
            clearForm();
            $('#ontologySpaceId').val(idz[0]);
            $('#ontologyTermParentId').val(idz[1]);
            $('#ontologyTermId').focus();
        }

        function loadOntologyTerm(id, folderName){

            var url = getOntologyTermURL;
            var ontId = id.split("_");
            var parameters={ontologyTermId : ontId[1]};

            $.get(url ,parameters , function (response) {
                var responseData = JSON.parse(response);
                var data = responseData;

                $("#folderName").html("Parent term: " +folderName);


                $('#ontologyTermId').val(data.id);
                $('#ontologyTermDescriptionUrl').val(data.descriptionUrl);
                $('#ontologyTermOrder').val(data.order);
                $('#ontologyTermName').val(data.name);
                $('#ontologySpaceId').val(data.ontologySpaceId);
                $('#ontologyTermParentId').val(data.parentId);

                $("#deleteOntologyTerm").show();
                $("#article-view").unmask()

            });

        }
        function deleteOntologyTerm(){
            $("#article-view").mask()
            var url = deleteOntologyTermURL;

            var id = $('#ontologyTermId').val();
            var parameters={id : id};
            $.post(url ,parameters , function (response) {
                var responseData = JSON.parse(response);
                var data = responseData;
                $("#infoBox").html("Ontology term deleted successfully!");
                $("#infoBox").show();
                $("#infoBox").delay(5000).fadeOut('slow');
                $("#article-view").unmask()
                clearForm();
                $("#article-view").mask({'label':"Please click on an Ontology term or <br/>create a new one clicking on the add new term link!", spinner:false});
                $('#tree-view').tree('reload');
            });
        }
        function saveOntologyTerm(){

            $("#article-view").mask()
            var url = saveOntologyTermURL;

            var id = $('#ontologyTermId').val();
            var descriptionUrl= $('#ontologyTermDescriptionUrl').val();
            var order= $('#ontologyTermOrder').val();
            var name= $('#ontologyTermName').val();
            var parentId = $('#ontologyTermParentId').val();
            var ontologySpaceId = $('#ontologySpaceId').val();
            var parameters={id : id,
                descriptionUrl: descriptionUrl,
                order: order,
                name: name,
                parentId:parentId,
                ontologySpaceId:ontologySpaceId
            };

            $.post(url ,parameters , function (response) {
                var responseData = JSON.parse(response);
                var data = responseData;
                $("#infoBox").html("Ontology term updated successfully!");
                $("#infoBox").show();
                $("#infoBox").delay(5000).fadeOut('slow');
                $("#article-view").unmask()
                $('#tree-view').tree('reload');

            });
        }



        ]]>
    </script>
    <div class="contentEditor">
        <div class="contentBody">
            <ul class="c-TabBar clearfix">
                <li class="c-TabBar__tab--first active"><a>Ontology Editor</a></li>
                <li class="c-TabBar__tab "><a href="${focusAreaEditorURL}">Focus area editor</a></li>
            </ul>

            <div id="infoBox"><!-- --></div>
            <div  id="innerContent" class="addpropbox">
                <div class="colFloatLef">
                    <h3>Ontology areas and terms</h3>
                    <div class="treeContainer">
                        <div id="tree-view" data-url="${ontologyListFolderURL}" ><!-- --></div>
                    </div>
                </div>
                <div class="colFloatLef" style="width: 500px;margin-left: 15px;">
                    <div id="article-view">
                        <h3>Ontology term</h3>

                        <div>
                            <input type="hidden" id="ontologyTermId"/>
                            <input type="hidden" id="ontologyTermParentId"/>
                            <input type="hidden" id="ontologySpaceId"/>
                            Name: <input type="text" id="ontologyTermName"  maxcharacters="100"  /><br/>
                            Order: <input type="text" id="ontologyTermOrder"  maxcharacters="100"  /><br/>
                            Description URL: <br/>
                            <input type="text" id="ontologyTermDescriptionUrl"  maxcharacters="100"  />

                        </div>
                        <div id="folderName">Parent term: <!-- --></div>
                        <br/>
                        <div class="floatRight outerVerticalCenter" id="deleteOntologyTerm" ><a  class="c-Button__primary" href="#">Delete</a></div>
                        <div class="floatRight outerVerticalCenter" id="saveOntologyTerm" ><a  class="c-Button__primary" href="#">Save</a></div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</xcolab:layout>
</jsp:root>
