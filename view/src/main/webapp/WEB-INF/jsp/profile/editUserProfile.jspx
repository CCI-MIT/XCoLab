<jsp:root version="2.1" xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:form="http://www.springframework.org/tags/form"
          xmlns:spring="http://www.springframework.org/tags"
          xmlns:xcolab="urn:jsptagdir:/WEB-INF/tags">

<jsp:directive.page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"/>
<xcolab:layout title="Edit Profile">
    <jsp:directive.include file="./init.jspx" />

    <!--@elvariable id="colabShortName" type="java.lang.String"-->
    <!--@elvariable id="colabName" type="java.lang.String"-->
	<!--@elvariable id="userBean" type="org.xcolab.portlets.userprofile.beans.UserBean"-->
	<!--@elvariable id="permissions" type="org.xcolab.portlets.userprofile.utils.UserProfilePermissions"-->
    <!--@elvariable id="currentUserProfile" type="org.xcolab.view.pages.profile.wrappers.UserProfileWrapper"-->
    <!--@elvariable id="memberCategories" type="java.util.List<org.xcolab.client.members.pojo.MemberCategory>"-->
    <!--@elvariable id="_csrf" type="org.springframework.security.web.csrf.CsrfToken>"-->
    <!--@elvariable id="_isGoogleSsoActive" type="java.lang.Boolean"-->
    <!--@elvariable id="_isFacebookSsoActive" type="java.lang.Boolean"-->

	<c:if test="${updateError}">
		<script>
			updateError();
		</script>
	</c:if>

    <c:if test="${imageSizeError}">
        <script>
            imageSizeError();
        </script>
    </c:if>

	<c:set var="unlinkFacebookSSO" value="/members/profile/${userBean.userId}/api/sso/facebook/unlink" />
    <c:set var="unlinkGoogleSSO" value="/members/profile/${userBean.userId}/api/sso/google/unlink" />

	<c:set var="updateUserSendEmailOnMessageSettings" value="/members/profile/${userBean.userId}/api/settings/messaging/updateEmailOnMessage" />
	<c:set var="updateUserSendEmailOnActivitySettings" value="/members/profile/${userBean.userId}/api/settings/messaging/updateEmailOnActivity" />
	<c:set var="updateUserSendDailyEmailOnActivitySettings" value="/members/profile/${userBean.userId}/api/settings/messaging/updateDailyEmail" />

	<c:set var="newsletterSubscribe" value="/members/profile/${userBean.userId}/api/settings/newsletter/subscribe" />
	<c:set var="newsletterUnSubscribe" value="/members/profile/${userBean.userId}/api/settings/newsletter/subscribe" />

	<c:set var="updateUserProfileForm" value="/members/profile/${userBean.userId}/edit" />

    <c:set var="deleteProfileUrl" value="/members/profile/${userBean.userId}/delete" />

	<h1><spring:message code="profile.title.edit" /></h1>
	<div class="text-muted">
		<em>
            <span class="required-field"><!-- --></span> <spring:message code="profile.validation.mandatory" />.
        </em>
	</div>


	<form:form autocomplete="off" id="updateUserProfileForm"
			   action="${updateUserProfileForm}" commandName="userBean" method="post">
        <c:if test="${not isI18NActive}">
            <form:hidden path="defaultLocale" />
        </c:if>
		<div id="main" class="userprofile">
			<form:hidden path="userId"/>
			<div class="reg_errors"><!--  --></div>
			<form:errors cssClass="c-Alert c-Alert__error" path="*" htmlEscape="false" />

			<!-- use these fields to prevent chrome from wrongly filling in country and current password automatically -->
			<input type="text" style="display:none" />
			<input type="password" style="display:none" />

			<div class="comm_member">
				<div class="comm_member-photo">
					<div style="float: right">
                        <form:hidden id="userPortraitInput" path="imageId" />
                        <xcolab:imageUpload uniqueName="userPortraitUpload" imageIdInput="userPortraitInput"
                                            defaultImage="MEMBER" />
					</div>
				</div>
				<div class="comm_member-info">
					<table border="0" cellpadding="0" cellspacing="0" class="colab nlpad">
						<tr>
							<th class="b m nowrap required-field" width="170">
                                <spring:message code="profile.form.fields.firstname"/>
							</th>
							<td>
								<form:input id="firstName" path="firstName" cssClass="form-control"/>
								<div class="reg_errors"><!--  -->
									<form:errors cssClass="c-Alert c-Alert__error" path="firstName" />
								</div>
							</td>
						</tr>
						<tr>
							<th class="b nowrap required-field">
                                <spring:message code="profile.form.fields.lastname"/>
							</th>
							<td>
								<form:input id="lastName" path="lastName" cssClass="form-control"/>
								<div class="reg_errors"><!--  -->
									<form:errors cssClass="c-Alert c-Alert__error" path="lastName" />
								</div>
							</td>
						</tr>

						<tr>
							<th class="b m required-field">
                                <spring:message code="profile.form.fields.country"/>
							</th>
							<td>
                                <form:select cssClass="form-control" path="countryCode">
                                    <form:option value="" label="Select country"/>
                                    <form:options items="${countrySelectItems}" itemValue="value" itemLabel="lable"/>
                                </form:select>
                                <div class="reg_errors"><!--  -->
                                    <form:errors cssClass="c-Alert c-Alert__error" path="countryCode" />
                                </div>
							</td>
						</tr>
                        <c:if test="${isI18NActive}">
                            <tr>
                                <th class="b m required-field">
                                    <spring:message code="profile.form.fields.language"/>
                                </th>
                                <td>
                                    <form:select cssClass="form-control" path="defaultLocale">
                                        <form:option value="" label="Select language"/>
                                        <c:forEach var="lang" items="${languageSelectItems}">
                                            <form:option value="${lang['value']}" >
                                                <spring:message code="${lang['lable']}"/>
                                            </form:option>
                                        </c:forEach>
                                    </form:select>
                                    <div class="reg_errors"><!--  -->
                                        <form:errors cssClass="c-Alert c-Alert__error" path="countryCode" />
                                    </div>
                                </td>
                            </tr>
                        </c:if>
					</table>

				</div>
				<div id="userCountry" style="display: none;">${userBean.countryName}</div>
				<div class="clearfix"><!--  --></div>
			</div>

			<div>
				<table border="0" cellpadding="0" cellspacing="0" class="colab nlpad">
					<tbody>
						<tr>
							<th class="b m" ><spring:message code="profile.form.fields.email"/>
							</th>
							<td>
								<form:input id="emailStored" cssClass="form-control" path="emailStored" readonly="true"/>
							</td>
						</tr>
						<tr id="EmailRow">
							<th class="b m" >
                                <spring:message code="profile.form.fields.newemail"/>
							</th>
							<td>
								<form:input  id="email" cssClass="form-control" path="email"/>
								<div class="reg_errors"><!--  -->
									<form:errors cssClass="c-Alert c-Alert__error" path="email" />
								</div>
							</td>
						</tr>

						<tr id="retypeEmailRow" style="${emailError ? '' : 'display: none;'}">
							<th class="b m required-field">
                                <spring:message code="profile.form.fields.retypeemail"/>
							</th>
							<td>
								<form:input  id="retypeEmail" cssClass="form-control" path="retypeEmail" autocomplete="off"/>
								<div class="reg_errors"><!--  -->
									<form:errors cssClass="c-Alert c-Alert__error" path="retypeEmail" />
								</div>
							</td>
						</tr>

                        <c:if test="${not empty currentUserProfile.user.loginTokenId}">
                            <tr>
                                <th class="b m nowrap">
                                    <spring:message code="profile.form.fields.newlink"/>
                                </th>
                                <td>
                                    <button type="button" class="btn btn-primary" onclick="sendNewLoginLink()">
                                        <spring:message code="profile.form.button.sendlink"/>
                                    </button>
                                </td>
                            </tr>
                        </c:if>

                        <c:choose>
                            <c:when test="${currentUserProfile.viewingOwnProfile and empty currentUserProfile.user.hashedPassword}">
                                <!-- User has no password yet - allow sending reset link -->
                                <tr>
                                    <th class="b m nowrap">
                                        <spring:message code="profile.form.fields.newpassword"/>
                                    </th>
                                    <td>
                                        <button type="button" data-toggle="modal" data-target="#forgotPasswordModal" class="btn btn-primary">
                                            <spring:message code="profile.form.button.setpassword"/>
                                        </button>
                                    </td>
                                </tr>
                            </c:when>
                            <c:otherwise>
                                <tr>
                                    <th class="b m nowrap">
                                        <spring:message code="profile.form.fields.password"/>
                                    </th>
                                    <td>
                                        <form:password cssClass="form-control" path="currentPassword" />
                                        <div class="reg_errors">
                                            <form:errors cssClass="c-Alert c-Alert__error" path="currentPassword" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <th class="b m nowrap">
                                        <spring:message code="profile.form.fields.newpassword"/>
                                    </th>
                                    <td>
                                        <form:password cssClass="form-control" path="password"/>
                                        <div class="reg_errors"><!--  -->
                                            <form:errors cssClass="c-Alert c-Alert__error" path="password" />
                                        </div>
                                    </td>
                                </tr>
                                <tr id="retypePasswordRow" style="${passwordError ? '' : 'display: none;'}">
                                    <th class="b m nowrap required-field">
                                        <spring:message code="profile.form.fields.retypepassword"/>
                                    </th>
                                    <td>
                                        <form:password cssClass="form-control" path="retypePassword" />
                                        <div class="reg_errors"><!--  -->
                                            <form:errors cssClass="c-Alert c-Alert__error" path="retypePassword" />
                                        </div>
                                    </td>
                                </tr>
                            </c:otherwise>
                        </c:choose>
					</tbody>
				</table>

				<c:if test="${permissions.canAdmin}">
					<button type="button" class="btn btn-link js-PostLink" data-url="/impersonate?memberId=${currentUserProfile.userId}">
                        Impersonate ${userBean.firstName}
                    </button>
				</c:if>

				<div class="profile_about-head"><spring:message code="profile.form.fields.shortbio"/></div>
				<div class="userProfileAbout">
					<form:textarea
						cssClass="rte-editorPlaceholder form-control" path="shortBio" />
					<div class="inputLimitContainer" style="margin-top: 10px; float:right; ">
						<span class="limit_characterCount"><!--  --></span>/&#160;
						<span class="limit_charactersMax">2000</span> characters
					</div>
					<div class="reg_errors"><!--  -->
						<form:errors cssClass="c-Alert c-Alert__error" path="shortBio" />
					</div>
					<div class="clearfix">&#160;</div>
				</div>

				<a class="btn btn-primary" href="javascript:;" onclick="updateTextarea();jQuery('#updateUserProfileForm').submit();"><spring:message code="profile.form.button.save"/></a>
				<a class="btn btn-gray" href="/members/profile/${currentUserProfile.userId}"><spring:message code="profile.form.button.cancel"/></a>
			</div>
		</div> <!-- /main -->

		<div class="right_col v1">
			<div class="comm_rightcol">
				<div class="comm_rightcol-title2"><spring:message code="profile.message.settings.title"/></div>
				<table border="0" cellpadding="0" cellspacing="0" class="colab">
					<tr class="colabRow">
						<td class="actionColumn">
							<form:checkbox id="sendEmailOnMessage" cssClass="cmn-toggle cmn-toggle-round"
										   path="sendEmailOnMessage" onchange="updateUserSendEmailOnMessageSettings(this)"/>
							<form:label path="sendEmailOnMessage"/>
						</td>
						<td class="profile_settings">
                            <spring:message code="profile.message.settings.emailreceive"/>
						</td>
					</tr>
					<tr class="colabRow">
						<td class="actionColumn">
							<form:checkbox id="sendEmailOnActivity" cssClass="cmn-toggle cmn-toggle-round"
										   path="sendEmailOnActivity" onchange="updateUserSendEmailOnActivitySettings(this)"/>
							<form:label path="sendEmailOnActivity"/>
						</td>
						<td class="profile_settings">
                            <spring:message code="profile.message.settings.emailsubscription"/>
						</td>
					</tr>
					<tr class="colabRow">
						<td class="actionColumn">
							<form:checkbox id="sendDailyEmailOnActivity" disabled="${not userBean.sendEmailOnActivity}"
										   cssClass="cmn-toggle cmn-toggle-round" path="sendDailyEmailOnActivity"
										   onchange="updateUserSendDailyEmailOnActivitySettings(this)" />
							<form:label path="sendDailyEmailOnActivity"/>
						</td>
						<td class="profile_settings">
                            <spring:message code="profile.message.settings.emaildailydigest"/>
						</td>
					</tr>
				</table>
				<div class="clearfix"><!-- --></div>
			</div>
		</div> <!-- /right_col -->
	</form:form>

	<c:if test="${newsletterActive}">
		<div class="right_col v1">
			<div class="comm_rightcol">
				<div class="comm_rightcol-title2"><spring:message code="profile.newsletter.settings.title" arguments="${_colabShortName}" /></div>
				<table border="0" cellpadding="0" cellspacing="0" class="colab">
					<form:form commandName="newsletterBean">
						<tr class="colabRow">
							<td class="actionColumn">
								<form:checkbox id="emailSubscribedToNewsletter" cssClass="cmn-toggle cmn-toggle-round"
											   path="emailSubscribedToNewsletter" onchange="updateNewsletterSettings(this)" />
								<form:label path="emailSubscribedToNewsletter"/>
							</td>
							<td>
                                <spring:message code="profile.newsletter.settings.sendme" arguments="${_colabShortName}"/>
							</td>
						</tr>
					</form:form>
				</table>
				<div class="clearfix"><!-- --></div>
			</div>
		</div>
	</c:if>

    <c:if test="${(_isFacebookSsoActive or _isGoogleSsoActive)}">
        <div class="right_col v1">
            <div class="comm_rightcol">
                <div class="comm_rightcol-title2"><spring:message code="profile.sso.settings.title"/></div>
                <table border="0" cellpadding="0" cellspacing="0" class="colab">
                    <c:if test="${_isFacebookSsoActive}">
                        <tr class="colabRow">
                            <td class="actionColumn">
                                <c:choose>
                                    <c:when test="${currentUserProfile.hasFacebookId}">
                                        <input id="hasFacebookId" class="cmn-toggle cmn-toggle-round" type="checkbox"
                                               value="true" checked="checked" onClick="unlinkFacebookSSO();" />
                                    </c:when>
                                    <c:otherwise>
                                        <input id="hasFacebookId" class="cmn-toggle cmn-toggle-round" type="checkbox"
                                               disabled="true" />
                                    </c:otherwise>
                                </c:choose>
                                <label for="hasFacebookId"><!-- --></label>
                            </td>
                            <td>
                                <spring:message code="profile.sso.settings.facebook"/>
                            </td>
                        </tr>
                    </c:if>
                    <c:if test="${_isGoogleSsoActive}">
                        <tr class="colabRow">
                            <td class="actionColumn">
                                <c:choose>
                                    <c:when test="${currentUserProfile.hasGoogleId}">
                                        <input id="hasOpenId" class="cmn-toggle cmn-toggle-round" type="checkbox"
                                               value="true" checked="checked" onClick="unlinkGoogleSSO();" />
                                    </c:when>
                                    <c:otherwise>
                                        <input id="hasOpenId" class="cmn-toggle cmn-toggle-round" type="checkbox"
                                               disabled="true" />
                                    </c:otherwise>
                                </c:choose>
                                <label for="hasOpenId"><!-- --></label>
                            </td>
                            <td>
                                <spring:message code="profile.sso.settings.google"/>
                            </td>
                        </tr>
                    </c:if>
                </table>
                <div class="clearfix"><!-- --></div>
            </div>
        </div> <!-- /right_col -->
    </c:if>

	<div class="right_col v1">
		<div class="comm_rightcol">
			<div class="comm_rightcol-title2"><spring:message code="profile.account.settings.title"/></div>
			<table border="0" cellpadding="0" cellspacing="0" class="colab">
				<tr class="colabRow">
					<td class="actionColumn">
                        <spring:message code="profile.account.delete.question" arguments="${_colabName}" var="deleteMsg"/>
						<form action="${deleteProfileUrl}" method="post" onsubmit="confirm('${deleteMsg}')">
                            <input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}"/>
							<button type="submit" class="btn btn-gray btn-sm"><spring:message code="profile.account.delete.button"/></button>
						</form>
					</td>
                    <td>
                        <spring:message code="profile.account.delete.message" arguments="${_colabName}"/>

                    </td>
				</tr>
			</table>
			<div class="clearfix"><!-- --></div>
		</div>
	</div> <!-- /right_col4 -->

    <c:if test="${permissions.canAdmin}">
        <div class="right_col v1">
            <div class="comm_rightcol">
                <div class="comm_rightcol-title2"><spring:message code="profile.account.roles.title"/></div>
                <table border="0" cellpadding="0" cellspacing="0" class="colab">
                    <c:forEach var="memberCategory" items="${memberCategories}">
                        <tr class="colabRow">
                            <td class="actionColumn">
                                <c:choose>
                                    <c:when test="${currentUserProfile.hasRole(memberCategory.roleId)}">
                                        <input id="hasRole${memberCategory.roleId}" class="cmn-toggle cmn-toggle-round" type="checkbox"
                                               value="true" checked="checked" onClick="removeRole(${memberCategory.roleId});" />
                                    </c:when>
                                    <c:otherwise>
                                        <input id="hasRole${memberCategory.roleId}" class="cmn-toggle cmn-toggle-round" type="checkbox"
                                               value="false" onClick="addRole(${memberCategory.roleId});" />
                                    </c:otherwise>
                                </c:choose>
                                <label for="hasRole${memberCategory.roleId}"></label>
                            </td>
                            <td class="${memberCategory.showInList ? '' : 'text-muted'}">
                                <img src="${_themeImageFolder}/${memberCategory.imageName}.png"
                                     width="16" height="16" /> ${memberCategory.categoryName}
                            </td>
                        </tr>
                    </c:forEach>
                </table>
                <div class="clearfix"><!-- --></div>
            </div>
        </div> <!-- /right_col -->
    </c:if>

	<xcolab:requireLibrary name="CKEditor" />
    <!-- TODO COLAB-1191: also used in register -->
	<script>
        jQuery(function() {
            updateTextarea();
        });

		function updateTextarea() {
			for ( var instance in CKEDITOR.instances) {
				CKEDITOR.instances[instance].updateElement();
			}
		}
	</script>


	<iframe name="_fileUploadFrame" id="fileUploadFrame" class="hidden"
			style="display: none;">
		<!-- comment -->
	</iframe>

    <spring:message code="profile.message.settings.notification.successufull" var="messageSuccess"/>
    <spring:message code="profile.message.settings.notification.failed" var="messageFailed"/>
    <spring:message code="profile.newsletter.notification.successufull" var="newsletterSuccess"/>
    <spring:message code="profile.newsletter.notification.failed" var="newsletterFailed"/>
    <spring:message code="profile.sso.notification.successufull" var="ssoSuccess"/>
    <spring:message code="profile.sso.notification.failed" var="ssoFailed"/>

    <script>
        var profileUserId = ${userBean.userId};
    </script>

	<script>

		jQuery("#email").keyup(function(){
			var $emailElement = jQuery("#email");
            if ($emailElement.val() !== "" &amp;&amp; $emailElement.val() !== jQuery("#emailStored").val()) {
				jQuery("#retypeEmailRow").slideDown();
			} else {
				jQuery("#retypeEmailRow").slideUp();
			}
		});

		jQuery("#password").keyup(function(){
			if (jQuery("#password").val() !== "") {
				jQuery("#retypePasswordRow").slideDown();
			} else {
				jQuery("#retypePasswordRow").slideUp();
			}
		});

		jQuery("#sendEmailOnActivity").change(function(){

			var $dailyEmailsToggleElement = jQuery("#sendDailyEmailOnActivity");
            if (!jQuery("#sendEmailOnActivity").is(":checked")) {
				$dailyEmailsToggleElement.attr('checked', false);
				$dailyEmailsToggleElement.attr("disabled", true);
			} else {
				$dailyEmailsToggleElement.removeAttr("disabled");
			}
		});

		function sendNewLoginLink() {
		    jQuery.post({
                url: '/members/profile/' + profileUserId + '/api/login/generateNewToken',
                success: function() {
                    noty({text: 'New login link sent.', type: 'success'});
                },
                error: function() {
                    noty({text: 'Error sending login link!', type: 'error'});
                }
            });
        }

		function updateMessageSettingsOnServer(updateUrl, formData){
			var deferred = jQuery.Deferred();
				sendAjaxToServer(updateUrl, formData).done(function(response){
					if (response) {
                        noty({text: '${messageSuccess}', type: 'success'});
					} else {
                        noty({text: '${messageFailed}', type: 'error'});
					}
				});
			return deferred;
		}

		function updateUserSendEmailOnActivitySettings(element){

			var updateMessageSettingsURL = '${updateUserSendEmailOnActivitySettings}';
			var checkedFormData = createCheckedFormData(element.checked);
			updateMessageSettingsOnServer(updateMessageSettingsURL, checkedFormData).done(function (result) {
				if (!result) {
					jQuery("#updateUserSendEmailOnActivitySettings").attr('checked', !element.checked);
				}
			});
		}

		function updateUserSendEmailOnMessageSettings(element){

			var updateMessageSettingsURL = '${updateUserSendEmailOnMessageSettings}';
			var checkedFormData = createCheckedFormData(element.checked);
			updateMessageSettingsOnServer(updateMessageSettingsURL, checkedFormData).done(function (result) {
				if (!result) {
					jQuery("#updateUserSendEmailOnMessageSettings").attr('checked', !element.checked);
				}
			});
		}

		function createCheckedFormData(elementChecked){
			var formData = "messageSetting=";
			if (elementChecked) {
				formData += "true";
			} else {
				formData += "false";
			}
			return formData;
		}

		function updateUserSendDailyEmailOnActivitySettings(element) {
			var updateMessageSettingsURL = '${updateUserSendDailyEmailOnActivitySettings}';
			var checkedFormData = createCheckedFormData(element.checked);
			updateMessageSettingsOnServer(updateMessageSettingsURL, checkedFormData).done(function (result) {
				if(!result) {
					jQuery("#updateUserSendDailyEmailOnActivitySettings").attr('checked', !element.checked);
				}
			});
		}

		function updateNewsletterSettings(element) {
			//console.log("updateNewsletterSettings", element.checked);
			if(element.checked){
				subscribeNewsletter();
			} else{
				unSubscribeNewsletter();
			}
		}

		function updateNewsletterSettingsOnServer(updateUrl) {
			var deferred = jQuery.Deferred();
				sendAjaxToServer(updateUrl).done(function(response) {
					if (response) {
						deferred.resolve(true);
                        noty({text: '${newsletterSuccess}', type: 'success'});
					} else {
						deferred.resolve(false);
                        noty({text: '${newsletterFailed}', type: 'error'});
					}
				});
			return deferred;
		}

		function subscribeNewsletter() {
			var newsletterSubscribeURL = '${newsletterSubscribe}';
			updateNewsletterSettingsOnServer(newsletterSubscribeURL).done(function (result) {
				if (!result) {
					jQuery("#emailSubscribedToNewsletter").attr('checked', false);
				}
			});

		}
		function unSubscribeNewsletter() {
			var newsletterUnSubscribeURL = '${newsletterUnSubscribe}';
			updateNewsletterSettingsOnServer(newsletterUnSubscribeURL).done(function (result) {
				if (!result) {
					jQuery("#emailSubscribedToNewsletter").attr('checked', true);
				}
			});
		}

		function unlinkSSOonServer(updateUrl) {
			var deferred = jQuery.Deferred();
            sendAjaxToServer(updateUrl).done(function(response){
                if (response) {
                    deferred.resolve(true);
                    noty({text: '${ssoSuccess}', type: 'success'});
                } else {
                    deferred.resolve(false);
                    noty({text: '${ssoFailed}', type: 'error'});
                }
            });
			return deferred;
		}

		function unlinkFacebookSSO() {
			var unlinkSSOURL = '${unlinkFacebookSSO}';
			unlinkSSOonServer(unlinkSSOURL).done(function (result) {
				if (result) {
					jQuery("#hasFacebookId").attr('onclick',"");
					var $hasOpenIdElement = jQuery("#hasOpenId");
                    $hasOpenIdElement.attr('disabled', true);
					$hasOpenIdElement.removeAttr('checked');
				} else {
					jQuery("#hasFacebookId").attr('checked', true);
				}
			});
		}

		function unlinkGoogleSSO() {
			var unlinkSSOURL = '${unlinkGoogleSSO}';
			unlinkSSOonServer(unlinkSSOURL).done(function (result) {
				var $hasOpenIdElement = jQuery("#hasOpenId");
                if (result) {
					$hasOpenIdElement.attr('onclick', "");
					$hasOpenIdElement.attr('disabled', "true");
					$hasOpenIdElement.removeAttr('checked');
				} else {
					$hasOpenIdElement.attr('checked', true);
				}
			});
		}

        function changeRoleOnServer(updateUrl) {
            var deferred = jQuery.Deferred();
            sendAjaxToServer(updateUrl).done(function(response){
                if (response) {
                    deferred.resolve(true);
                    noty({text: 'Role updated successfully!', type: 'success'});
                } else {
                    deferred.resolve(false);
                    noty({text: 'Failed to update role!', type: 'error'});
                }
            });
            return deferred;
        }

        function addRole(roleId) {
            var addRoleUrl = '/members/profile/${currentUserProfile.userId}/api/roles/add/' + roleId;
            changeRoleOnServer(addRoleUrl).done(function(success) {
                var $roleToggleElement = jQuery("#hasRole" + roleId);
                if (success) {
                    $roleToggleElement.attr('checked', true);
                } else {
                    $roleToggleElement.removeAttr('checked');
                }
            });
        }

		function removeRole(roleId) {
            var removeRoleUrl = '/members/profile/${currentUserProfile.userId}/api/roles/remove/' + roleId;
            changeRoleOnServer(removeRoleUrl).done(function(success) {
                var $roleToggleElement = jQuery("#hasRole" + roleId);
                if (success) {
                    $roleToggleElement.removeAttr('checked');
                } else {
                    $roleToggleElement.attr('checked', true);

                }
            });
        }

	</script>
</xcolab:layout>
</jsp:root>
