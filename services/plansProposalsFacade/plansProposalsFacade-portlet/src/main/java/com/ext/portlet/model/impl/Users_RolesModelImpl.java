package com.ext.portlet.model.impl;

import com.ext.portlet.model.Users_Roles;
import com.ext.portlet.model.Users_RolesModel;
import com.ext.portlet.model.Users_RolesSoap;
import com.ext.portlet.service.persistence.Users_RolesPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Users_Roles service. Represents a row in the &quot;xcolab_Users_Roles&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ext.portlet.model.Users_RolesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Users_RolesImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Users_RolesImpl
 * @see com.ext.portlet.model.Users_Roles
 * @see com.ext.portlet.model.Users_RolesModel
 * @generated
 */
@JSON(strict = true)
public class Users_RolesModelImpl extends BaseModelImpl<Users_Roles>
    implements Users_RolesModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a users_ roles model instance should use the {@link com.ext.portlet.model.Users_Roles} interface instead.
     */
    public static final String TABLE_NAME = "xcolab_Users_Roles";
    public static final Object[][] TABLE_COLUMNS = {
            { "userId", Types.BIGINT },
            { "roleId", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table xcolab_Users_Roles (userId LONG not null,roleId LONG not null,primary key (userId, roleId))";
    public static final String TABLE_SQL_DROP = "drop table xcolab_Users_Roles";
    public static final String ORDER_BY_JPQL = " ORDER BY users_Roles.id.userId ASC, users_Roles.id.roleId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY xcolab_Users_Roles.userId ASC, xcolab_Users_Roles.roleId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.ext.portlet.model.Users_Roles"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.ext.portlet.model.Users_Roles"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.ext.portlet.model.Users_Roles"));
    private static ClassLoader _classLoader = Users_Roles.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Users_Roles.class
        };
    private long _userId;
    private String _userUuid;
    private long _roleId;
    private Users_Roles _escapedModel;

    public Users_RolesModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Users_Roles toModel(Users_RolesSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Users_Roles model = new Users_RolesImpl();

        model.setUserId(soapModel.getUserId());
        model.setRoleId(soapModel.getRoleId());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Users_Roles> toModels(Users_RolesSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Users_Roles> models = new ArrayList<Users_Roles>(soapModels.length);

        for (Users_RolesSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public Users_RolesPK getPrimaryKey() {
        return new Users_RolesPK(_userId, _roleId);
    }

    @Override
    public void setPrimaryKey(Users_RolesPK primaryKey) {
        setUserId(primaryKey.userId);
        setRoleId(primaryKey.roleId);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return new Users_RolesPK(_userId, _roleId);
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((Users_RolesPK) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return Users_Roles.class;
    }

    @Override
    public String getModelClassName() {
        return Users_Roles.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("userId", getUserId());
        attributes.put("roleId", getRoleId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        Long roleId = (Long) attributes.get("roleId");

        if (roleId != null) {
            setRoleId(roleId);
        }
    }

    @JSON
    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @JSON
    @Override
    public long getRoleId() {
        return _roleId;
    }

    @Override
    public void setRoleId(long roleId) {
        _roleId = roleId;
    }

    @Override
    public Users_Roles toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Users_Roles) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        Users_RolesImpl users_RolesImpl = new Users_RolesImpl();

        users_RolesImpl.setUserId(getUserId());
        users_RolesImpl.setRoleId(getRoleId());

        users_RolesImpl.resetOriginalValues();

        return users_RolesImpl;
    }

    @Override
    public int compareTo(Users_Roles users_Roles) {
        Users_RolesPK primaryKey = users_Roles.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Users_Roles)) {
            return false;
        }

        Users_Roles users_Roles = (Users_Roles) obj;

        Users_RolesPK primaryKey = users_Roles.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Users_Roles> toCacheModel() {
        Users_RolesCacheModel users_RolesCacheModel = new Users_RolesCacheModel();

        users_RolesCacheModel.userId = getUserId();

        users_RolesCacheModel.roleId = getRoleId();

        return users_RolesCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{userId=");
        sb.append(getUserId());
        sb.append(", roleId=");
        sb.append(getRoleId());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("com.ext.portlet.model.Users_Roles");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>roleId</column-name><column-value><![CDATA[");
        sb.append(getRoleId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
