package com.ext.portlet.model.impl;

import com.ext.portlet.model.ModelInputGroup;
import com.ext.portlet.model.ModelInputGroupModel;
import com.ext.portlet.model.ModelInputGroupSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ModelInputGroup service. Represents a row in the &quot;xcolab_ModelInputGroup&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ext.portlet.model.ModelInputGroupModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ModelInputGroupImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ModelInputGroupImpl
 * @see com.ext.portlet.model.ModelInputGroup
 * @see com.ext.portlet.model.ModelInputGroupModel
 * @generated
 */
@JSON(strict = true)
public class ModelInputGroupModelImpl extends BaseModelImpl<ModelInputGroup>
    implements ModelInputGroupModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a model input group model instance should use the {@link com.ext.portlet.model.ModelInputGroup} interface instead.
     */
    public static final String TABLE_NAME = "xcolab_ModelInputGroup";
    public static final Object[][] TABLE_COLUMNS = {
            { "modelInputGroupPK", Types.BIGINT },
            { "modelId", Types.BIGINT },
            { "nameAndDescriptionMetaDataId", Types.BIGINT },
            { "name", Types.VARCHAR },
            { "description", Types.VARCHAR },
            { "displayItemOrder", Types.INTEGER },
            { "groupType", Types.VARCHAR },
            { "parentGroupPK", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table xcolab_ModelInputGroup (modelInputGroupPK LONG not null primary key,modelId LONG,nameAndDescriptionMetaDataId LONG,name VARCHAR(1024) null,description TEXT null,displayItemOrder INTEGER,groupType VARCHAR(256) null,parentGroupPK LONG)";
    public static final String TABLE_SQL_DROP = "drop table xcolab_ModelInputGroup";
    public static final String ORDER_BY_JPQL = " ORDER BY modelInputGroup.modelInputGroupPK ASC";
    public static final String ORDER_BY_SQL = " ORDER BY xcolab_ModelInputGroup.modelInputGroupPK ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.ext.portlet.model.ModelInputGroup"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.ext.portlet.model.ModelInputGroup"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.ext.portlet.model.ModelInputGroup"),
            true);
    public static long MODELID_COLUMN_BITMASK = 1L;
    public static long PARENTGROUPPK_COLUMN_BITMASK = 2L;
    public static long MODELINPUTGROUPPK_COLUMN_BITMASK = 4L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.ext.portlet.model.ModelInputGroup"));
    private static ClassLoader _classLoader = ModelInputGroup.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            ModelInputGroup.class
        };
    private long _modelInputGroupPK;
    private long _modelId;
    private long _originalModelId;
    private boolean _setOriginalModelId;
    private long _nameAndDescriptionMetaDataId;
    private String _name;
    private String _description;
    private int _displayItemOrder;
    private String _groupType;
    private long _parentGroupPK;
    private long _originalParentGroupPK;
    private boolean _setOriginalParentGroupPK;
    private long _columnBitmask;
    private ModelInputGroup _escapedModel;

    public ModelInputGroupModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static ModelInputGroup toModel(ModelInputGroupSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        ModelInputGroup model = new ModelInputGroupImpl();

        model.setModelInputGroupPK(soapModel.getModelInputGroupPK());
        model.setModelId(soapModel.getModelId());
        model.setNameAndDescriptionMetaDataId(soapModel.getNameAndDescriptionMetaDataId());
        model.setName(soapModel.getName());
        model.setDescription(soapModel.getDescription());
        model.setDisplayItemOrder(soapModel.getDisplayItemOrder());
        model.setGroupType(soapModel.getGroupType());
        model.setParentGroupPK(soapModel.getParentGroupPK());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<ModelInputGroup> toModels(
        ModelInputGroupSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<ModelInputGroup> models = new ArrayList<ModelInputGroup>(soapModels.length);

        for (ModelInputGroupSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _modelInputGroupPK;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setModelInputGroupPK(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _modelInputGroupPK;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return ModelInputGroup.class;
    }

    @Override
    public String getModelClassName() {
        return ModelInputGroup.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("modelInputGroupPK", getModelInputGroupPK());
        attributes.put("modelId", getModelId());
        attributes.put("nameAndDescriptionMetaDataId",
            getNameAndDescriptionMetaDataId());
        attributes.put("name", getName());
        attributes.put("description", getDescription());
        attributes.put("displayItemOrder", getDisplayItemOrder());
        attributes.put("groupType", getGroupType());
        attributes.put("parentGroupPK", getParentGroupPK());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long modelInputGroupPK = (Long) attributes.get("modelInputGroupPK");

        if (modelInputGroupPK != null) {
            setModelInputGroupPK(modelInputGroupPK);
        }

        Long modelId = (Long) attributes.get("modelId");

        if (modelId != null) {
            setModelId(modelId);
        }

        Long nameAndDescriptionMetaDataId = (Long) attributes.get(
                "nameAndDescriptionMetaDataId");

        if (nameAndDescriptionMetaDataId != null) {
            setNameAndDescriptionMetaDataId(nameAndDescriptionMetaDataId);
        }

        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }

        String description = (String) attributes.get("description");

        if (description != null) {
            setDescription(description);
        }

        Integer displayItemOrder = (Integer) attributes.get("displayItemOrder");

        if (displayItemOrder != null) {
            setDisplayItemOrder(displayItemOrder);
        }

        String groupType = (String) attributes.get("groupType");

        if (groupType != null) {
            setGroupType(groupType);
        }

        Long parentGroupPK = (Long) attributes.get("parentGroupPK");

        if (parentGroupPK != null) {
            setParentGroupPK(parentGroupPK);
        }
    }

    @JSON
    @Override
    public long getModelInputGroupPK() {
        return _modelInputGroupPK;
    }

    @Override
    public void setModelInputGroupPK(long modelInputGroupPK) {
        _modelInputGroupPK = modelInputGroupPK;
    }

    @JSON
    @Override
    public long getModelId() {
        return _modelId;
    }

    @Override
    public void setModelId(long modelId) {
        _columnBitmask |= MODELID_COLUMN_BITMASK;

        if (!_setOriginalModelId) {
            _setOriginalModelId = true;

            _originalModelId = _modelId;
        }

        _modelId = modelId;
    }

    public long getOriginalModelId() {
        return _originalModelId;
    }

    @JSON
    @Override
    public long getNameAndDescriptionMetaDataId() {
        return _nameAndDescriptionMetaDataId;
    }

    @Override
    public void setNameAndDescriptionMetaDataId(
        long nameAndDescriptionMetaDataId) {
        _nameAndDescriptionMetaDataId = nameAndDescriptionMetaDataId;
    }

    @JSON
    @Override
    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    @Override
    public void setName(String name) {
        _name = name;
    }

    @JSON
    @Override
    public String getDescription() {
        if (_description == null) {
            return StringPool.BLANK;
        } else {
            return _description;
        }
    }

    @Override
    public void setDescription(String description) {
        _description = description;
    }

    @JSON
    @Override
    public int getDisplayItemOrder() {
        return _displayItemOrder;
    }

    @Override
    public void setDisplayItemOrder(int displayItemOrder) {
        _displayItemOrder = displayItemOrder;
    }

    @JSON
    @Override
    public String getGroupType() {
        if (_groupType == null) {
            return StringPool.BLANK;
        } else {
            return _groupType;
        }
    }

    @Override
    public void setGroupType(String groupType) {
        _groupType = groupType;
    }

    @JSON
    @Override
    public long getParentGroupPK() {
        return _parentGroupPK;
    }

    @Override
    public void setParentGroupPK(long parentGroupPK) {
        _columnBitmask |= PARENTGROUPPK_COLUMN_BITMASK;

        if (!_setOriginalParentGroupPK) {
            _setOriginalParentGroupPK = true;

            _originalParentGroupPK = _parentGroupPK;
        }

        _parentGroupPK = parentGroupPK;
    }

    public long getOriginalParentGroupPK() {
        return _originalParentGroupPK;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            ModelInputGroup.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public ModelInputGroup toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (ModelInputGroup) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        ModelInputGroupImpl modelInputGroupImpl = new ModelInputGroupImpl();

        modelInputGroupImpl.setModelInputGroupPK(getModelInputGroupPK());
        modelInputGroupImpl.setModelId(getModelId());
        modelInputGroupImpl.setNameAndDescriptionMetaDataId(getNameAndDescriptionMetaDataId());
        modelInputGroupImpl.setName(getName());
        modelInputGroupImpl.setDescription(getDescription());
        modelInputGroupImpl.setDisplayItemOrder(getDisplayItemOrder());
        modelInputGroupImpl.setGroupType(getGroupType());
        modelInputGroupImpl.setParentGroupPK(getParentGroupPK());

        modelInputGroupImpl.resetOriginalValues();

        return modelInputGroupImpl;
    }

    @Override
    public int compareTo(ModelInputGroup modelInputGroup) {
        long primaryKey = modelInputGroup.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof ModelInputGroup)) {
            return false;
        }

        ModelInputGroup modelInputGroup = (ModelInputGroup) obj;

        long primaryKey = modelInputGroup.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        ModelInputGroupModelImpl modelInputGroupModelImpl = this;

        modelInputGroupModelImpl._originalModelId = modelInputGroupModelImpl._modelId;

        modelInputGroupModelImpl._setOriginalModelId = false;

        modelInputGroupModelImpl._originalParentGroupPK = modelInputGroupModelImpl._parentGroupPK;

        modelInputGroupModelImpl._setOriginalParentGroupPK = false;

        modelInputGroupModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<ModelInputGroup> toCacheModel() {
        ModelInputGroupCacheModel modelInputGroupCacheModel = new ModelInputGroupCacheModel();

        modelInputGroupCacheModel.modelInputGroupPK = getModelInputGroupPK();

        modelInputGroupCacheModel.modelId = getModelId();

        modelInputGroupCacheModel.nameAndDescriptionMetaDataId = getNameAndDescriptionMetaDataId();

        modelInputGroupCacheModel.name = getName();

        String name = modelInputGroupCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            modelInputGroupCacheModel.name = null;
        }

        modelInputGroupCacheModel.description = getDescription();

        String description = modelInputGroupCacheModel.description;

        if ((description != null) && (description.length() == 0)) {
            modelInputGroupCacheModel.description = null;
        }

        modelInputGroupCacheModel.displayItemOrder = getDisplayItemOrder();

        modelInputGroupCacheModel.groupType = getGroupType();

        String groupType = modelInputGroupCacheModel.groupType;

        if ((groupType != null) && (groupType.length() == 0)) {
            modelInputGroupCacheModel.groupType = null;
        }

        modelInputGroupCacheModel.parentGroupPK = getParentGroupPK();

        return modelInputGroupCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(17);

        sb.append("{modelInputGroupPK=");
        sb.append(getModelInputGroupPK());
        sb.append(", modelId=");
        sb.append(getModelId());
        sb.append(", nameAndDescriptionMetaDataId=");
        sb.append(getNameAndDescriptionMetaDataId());
        sb.append(", name=");
        sb.append(getName());
        sb.append(", description=");
        sb.append(getDescription());
        sb.append(", displayItemOrder=");
        sb.append(getDisplayItemOrder());
        sb.append(", groupType=");
        sb.append(getGroupType());
        sb.append(", parentGroupPK=");
        sb.append(getParentGroupPK());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(28);

        sb.append("<model><model-name>");
        sb.append("com.ext.portlet.model.ModelInputGroup");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>modelInputGroupPK</column-name><column-value><![CDATA[");
        sb.append(getModelInputGroupPK());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modelId</column-name><column-value><![CDATA[");
        sb.append(getModelId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>nameAndDescriptionMetaDataId</column-name><column-value><![CDATA[");
        sb.append(getNameAndDescriptionMetaDataId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description</column-name><column-value><![CDATA[");
        sb.append(getDescription());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>displayItemOrder</column-name><column-value><![CDATA[");
        sb.append(getDisplayItemOrder());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupType</column-name><column-value><![CDATA[");
        sb.append(getGroupType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>parentGroupPK</column-name><column-value><![CDATA[");
        sb.append(getParentGroupPK());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
