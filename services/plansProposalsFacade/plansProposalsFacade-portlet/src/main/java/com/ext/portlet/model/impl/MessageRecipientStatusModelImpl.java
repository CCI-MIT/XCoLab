package com.ext.portlet.model.impl;

import com.ext.portlet.model.MessageRecipientStatus;
import com.ext.portlet.model.MessageRecipientStatusModel;
import com.ext.portlet.model.MessageRecipientStatusSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the MessageRecipientStatus service. Represents a row in the &quot;xcolab_MessageRecipientStatus&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ext.portlet.model.MessageRecipientStatusModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MessageRecipientStatusImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MessageRecipientStatusImpl
 * @see com.ext.portlet.model.MessageRecipientStatus
 * @see com.ext.portlet.model.MessageRecipientStatusModel
 * @generated
 */
@JSON(strict = true)
public class MessageRecipientStatusModelImpl extends BaseModelImpl<MessageRecipientStatus>
    implements MessageRecipientStatusModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a message recipient status model instance should use the {@link com.ext.portlet.model.MessageRecipientStatus} interface instead.
     */
    public static final String TABLE_NAME = "xcolab_MessageRecipientStatus";
    public static final Object[][] TABLE_COLUMNS = {
            { "messageRecipientId", Types.BIGINT },
            { "messageId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "opened", Types.BOOLEAN },
            { "archived", Types.BOOLEAN }
        };
    public static final String TABLE_SQL_CREATE = "create table xcolab_MessageRecipientStatus (messageRecipientId LONG not null primary key,messageId LONG,userId LONG,opened BOOLEAN,archived BOOLEAN)";
    public static final String TABLE_SQL_DROP = "drop table xcolab_MessageRecipientStatus";
    public static final String ORDER_BY_JPQL = " ORDER BY messageRecipientStatus.messageId DESC";
    public static final String ORDER_BY_SQL = " ORDER BY xcolab_MessageRecipientStatus.messageId DESC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.ext.portlet.model.MessageRecipientStatus"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.ext.portlet.model.MessageRecipientStatus"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.ext.portlet.model.MessageRecipientStatus"),
            true);
    public static long ARCHIVED_COLUMN_BITMASK = 1L;
    public static long MESSAGEID_COLUMN_BITMASK = 2L;
    public static long USERID_COLUMN_BITMASK = 4L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.ext.portlet.model.MessageRecipientStatus"));
    private static ClassLoader _classLoader = MessageRecipientStatus.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            MessageRecipientStatus.class
        };
    private long _messageRecipientId;
    private long _messageId;
    private long _originalMessageId;
    private boolean _setOriginalMessageId;
    private long _userId;
    private String _userUuid;
    private long _originalUserId;
    private boolean _setOriginalUserId;
    private boolean _opened;
    private boolean _archived;
    private boolean _originalArchived;
    private boolean _setOriginalArchived;
    private long _columnBitmask;
    private MessageRecipientStatus _escapedModel;

    public MessageRecipientStatusModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static MessageRecipientStatus toModel(
        MessageRecipientStatusSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        MessageRecipientStatus model = new MessageRecipientStatusImpl();

        model.setMessageRecipientId(soapModel.getMessageRecipientId());
        model.setMessageId(soapModel.getMessageId());
        model.setUserId(soapModel.getUserId());
        model.setOpened(soapModel.getOpened());
        model.setArchived(soapModel.getArchived());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<MessageRecipientStatus> toModels(
        MessageRecipientStatusSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<MessageRecipientStatus> models = new ArrayList<MessageRecipientStatus>(soapModels.length);

        for (MessageRecipientStatusSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _messageRecipientId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setMessageRecipientId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _messageRecipientId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return MessageRecipientStatus.class;
    }

    @Override
    public String getModelClassName() {
        return MessageRecipientStatus.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("messageRecipientId", getMessageRecipientId());
        attributes.put("messageId", getMessageId());
        attributes.put("userId", getUserId());
        attributes.put("opened", getOpened());
        attributes.put("archived", getArchived());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long messageRecipientId = (Long) attributes.get("messageRecipientId");

        if (messageRecipientId != null) {
            setMessageRecipientId(messageRecipientId);
        }

        Long messageId = (Long) attributes.get("messageId");

        if (messageId != null) {
            setMessageId(messageId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        Boolean opened = (Boolean) attributes.get("opened");

        if (opened != null) {
            setOpened(opened);
        }

        Boolean archived = (Boolean) attributes.get("archived");

        if (archived != null) {
            setArchived(archived);
        }
    }

    @JSON
    @Override
    public long getMessageRecipientId() {
        return _messageRecipientId;
    }

    @Override
    public void setMessageRecipientId(long messageRecipientId) {
        _messageRecipientId = messageRecipientId;
    }

    @JSON
    @Override
    public long getMessageId() {
        return _messageId;
    }

    @Override
    public void setMessageId(long messageId) {
        _columnBitmask = -1L;

        if (!_setOriginalMessageId) {
            _setOriginalMessageId = true;

            _originalMessageId = _messageId;
        }

        _messageId = messageId;
    }

    public long getOriginalMessageId() {
        return _originalMessageId;
    }

    @JSON
    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _columnBitmask |= USERID_COLUMN_BITMASK;

        if (!_setOriginalUserId) {
            _setOriginalUserId = true;

            _originalUserId = _userId;
        }

        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    public long getOriginalUserId() {
        return _originalUserId;
    }

    @JSON
    @Override
    public boolean getOpened() {
        return _opened;
    }

    @Override
    public boolean isOpened() {
        return _opened;
    }

    @Override
    public void setOpened(boolean opened) {
        _opened = opened;
    }

    @JSON
    @Override
    public boolean getArchived() {
        return _archived;
    }

    @Override
    public boolean isArchived() {
        return _archived;
    }

    @Override
    public void setArchived(boolean archived) {
        _columnBitmask |= ARCHIVED_COLUMN_BITMASK;

        if (!_setOriginalArchived) {
            _setOriginalArchived = true;

            _originalArchived = _archived;
        }

        _archived = archived;
    }

    public boolean getOriginalArchived() {
        return _originalArchived;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            MessageRecipientStatus.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public MessageRecipientStatus toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (MessageRecipientStatus) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        MessageRecipientStatusImpl messageRecipientStatusImpl = new MessageRecipientStatusImpl();

        messageRecipientStatusImpl.setMessageRecipientId(getMessageRecipientId());
        messageRecipientStatusImpl.setMessageId(getMessageId());
        messageRecipientStatusImpl.setUserId(getUserId());
        messageRecipientStatusImpl.setOpened(getOpened());
        messageRecipientStatusImpl.setArchived(getArchived());

        messageRecipientStatusImpl.resetOriginalValues();

        return messageRecipientStatusImpl;
    }

    @Override
    public int compareTo(MessageRecipientStatus messageRecipientStatus) {
        int value = 0;

        if (getMessageId() < messageRecipientStatus.getMessageId()) {
            value = -1;
        } else if (getMessageId() > messageRecipientStatus.getMessageId()) {
            value = 1;
        } else {
            value = 0;
        }

        value = value * -1;

        if (value != 0) {
            return value;
        }

        return 0;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof MessageRecipientStatus)) {
            return false;
        }

        MessageRecipientStatus messageRecipientStatus = (MessageRecipientStatus) obj;

        long primaryKey = messageRecipientStatus.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        MessageRecipientStatusModelImpl messageRecipientStatusModelImpl = this;

        messageRecipientStatusModelImpl._originalMessageId = messageRecipientStatusModelImpl._messageId;

        messageRecipientStatusModelImpl._setOriginalMessageId = false;

        messageRecipientStatusModelImpl._originalUserId = messageRecipientStatusModelImpl._userId;

        messageRecipientStatusModelImpl._setOriginalUserId = false;

        messageRecipientStatusModelImpl._originalArchived = messageRecipientStatusModelImpl._archived;

        messageRecipientStatusModelImpl._setOriginalArchived = false;

        messageRecipientStatusModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<MessageRecipientStatus> toCacheModel() {
        MessageRecipientStatusCacheModel messageRecipientStatusCacheModel = new MessageRecipientStatusCacheModel();

        messageRecipientStatusCacheModel.messageRecipientId = getMessageRecipientId();

        messageRecipientStatusCacheModel.messageId = getMessageId();

        messageRecipientStatusCacheModel.userId = getUserId();

        messageRecipientStatusCacheModel.opened = getOpened();

        messageRecipientStatusCacheModel.archived = getArchived();

        return messageRecipientStatusCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(11);

        sb.append("{messageRecipientId=");
        sb.append(getMessageRecipientId());
        sb.append(", messageId=");
        sb.append(getMessageId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", opened=");
        sb.append(getOpened());
        sb.append(", archived=");
        sb.append(getArchived());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(19);

        sb.append("<model><model-name>");
        sb.append("com.ext.portlet.model.MessageRecipientStatus");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>messageRecipientId</column-name><column-value><![CDATA[");
        sb.append(getMessageRecipientId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>messageId</column-name><column-value><![CDATA[");
        sb.append(getMessageId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>opened</column-name><column-value><![CDATA[");
        sb.append(getOpened());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>archived</column-name><column-value><![CDATA[");
        sb.append(getArchived());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
