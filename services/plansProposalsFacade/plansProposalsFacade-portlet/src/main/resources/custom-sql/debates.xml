<?xml version="1.0"?>

<!--
  ~ Copyright (c) 2010. M.I.T. All Rights Reserved
  ~ Licensed under the MIT license. Please see http://www.opensource.org/licenses/mit-license.php
  ~ or the license.txt file included in this distribution for the full text of the license.
  -->

<custom-sql>


<sql id="com.ext.portlet.debaterevision.service.persistence.DebateItemFinderImpl.lastItem">
		<![CDATA[
			SELECT
				{DebateItem.*}
			FROM
				DebateItem
			WHERE
				DebateItem.debateItemId = ?
		    ORDER BY
		        DebateItem.itemVersion DESC
		]]>
</sql>

<sql id="com.ext.portlet.debaterevision.service.persistence.DebateItemFinderImpl.lastActiveItem">
		<![CDATA[
			SELECT
				{DebateItem.*}
			FROM
				DebateItem
			WHERE
				DebateItem.debateItemId = ? AND DebateItem.status LIKE 'ACTIVE'
		    ORDER BY
		        DebateItem.itemVersion DESC
		]]>
</sql>

<sql id="com.ext.portlet.debaterevision.service.persistence.DebateItemFinderImpl.lastItemInVersion">
		<![CDATA[
			SELECT
				{DebateItem.*}
			FROM
				DebateItem
			WHERE
				DebateItem.treeVersion <= ? AND DebateItem.debateItemId = ? AND DebateItem.status LIKE 'ACTIVE'
		    ORDER BY
		        DebateItem.itemVersion DESC
		]]>
</sql>

    <sql id="com.ext.portlet.debaterevision.service.persistence.DebateItemFinderImpl.lastItemByParent">
		<![CDATA[
			SELECT
				{DebateItem.*}
			FROM
				DebateItem
			INNER JOIN (
			    SELECT debateItemId, max(itemVersion) as itemVersion
			    FROM DebateItem
			    WHERE treeVersion <= ? AND debateItemParentId = ? AND status LIKE 'ACTIVE'
			    GROUP BY debateItemId
			) as t2
			ON
			    (DebateItem.debateItemId = t2.debateItemId and DebateItem.itemVersion = t2.itemVersion)
		]]>
</sql>


    <sql id="com.ext.portlet.debaterevision.service.persistence.DebateCategoryFinderImpl.categoryDebates">
		<![CDATA[
			SELECT
				{Debate.*}
			FROM
				Debate
		    INNER JOIN DebateCategoryMap
		    ON (DebateCategoryMap.debateCategoryPK = ? AND DebateCategoryMap.debateId = Debate.debateId)
			INNER JOIN (
			    SELECT debateId, max(treeVersion) as treeVersion
			    FROM Debate
			    WHERE status LIKE 'ACTIVE'
			    GROUP BY debateId
			) as t2
			ON
			    (Debate.debateId = t2.debateId and Debate.treeVersion = t2.treeVersion)

		]]>
    </sql>

    <sql id="com.ext.portlet.debaterevision.service.persistence.DebateFinderImpl.activeRecentDebates">
		<![CDATA[
			SELECT
				{Debate.*}
			FROM
				Debate
		    INNER JOIN (
			    SELECT debateId, max(treeVersion) as treeVersion
			    FROM Debate
			    WHERE status LIKE 'ACTIVE'
			    GROUP BY debateId
			) as t2
			ON
			    (Debate.debateId = t2.debateId and Debate.treeVersion = t2.treeVersion)

		]]>
    </sql>


    <sql id="com.ext.portlet.debaterevision.service.persistence.DebateFinderImpl.lastDebateVersion">
		<![CDATA[
			SELECT
				{Debate.*}
			FROM
				Debate

			WHERE
			    Debate.debateId = ?
			ORDER BY
		        Debate.treeVersion DESC
		]]>
    </sql>

    <sql id="com.ext.portlet.debaterevision.service.persistence.DebateFinderImpl.countDebateComments">
		<![CDATA[
			SELECT
				count(*) as comments
			FROM
				DebateComment
		    INNER JOIN
		        (select distinct(debateItemId) from DebateItem where debateId = ?) as items
		    ON (DebateComment.debateItemId = items.debateItemId);
		]]>
    </sql>

    <sql id="com.ext.portlet.debaterevision.service.persistence.DebateFinderImpl.debateComments">
		<![CDATA[
			SELECT
				{DebateComment.*}
			FROM
				DebateComment
		    INNER JOIN
		        (select distinct(debateItemId) from DebateItem where debateId = ?) as items
		    ON (DebateComment.debateItemId = items.debateItemId)
			ORDER BY
		        DebateComment.updated DESC
		]]>
    </sql>
    
    <sql id="com.ext.portlet.debaterevision.service.persistence.DebateFinderImpl.countDebateComments">
        <![CDATA[
            SELECT
                count(*) as comments
            FROM
                DebateComment
            INNER JOIN
                (select distinct(debateItemId) from DebateItem where debateId = ?) as items
            ON (DebateComment.debateItemId = items.debateItemId);
        ]]>
    </sql>
    
    <sql id="com.ext.portlet.debaterevision.service.persistence.DebateItemFinderImpl.countDebateItemComments">
        <![CDATA[
            SELECT
                count(*) as comments
            FROM
                DebateComment
            WHERE DebateComment.debateItemId = ?
        ]]>
    </sql>
    

</custom-sql>
