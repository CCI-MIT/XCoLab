package com.ext.portlet.discussions.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DiscussionMessageFlag service. Represents a row in the &quot;Discussions_DiscussionMessageFlag&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ext.portlet.discussions.model.impl.DiscussionMessageFlagModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ext.portlet.discussions.model.impl.DiscussionMessageFlagImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DiscussionMessageFlag
 * @see com.ext.portlet.discussions.model.impl.DiscussionMessageFlagImpl
 * @see com.ext.portlet.discussions.model.impl.DiscussionMessageFlagModelImpl
 * @generated
 */
public interface DiscussionMessageFlagModel extends BaseModel<DiscussionMessageFlag> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a discussion message flag model instance should use the {@link DiscussionMessageFlag} interface instead.
     */

    /**
     * Returns the primary key of this discussion message flag.
     *
     * @return the primary key of this discussion message flag
     */
    public Long getPrimaryKey();

    /**
     * Sets the primary key of this discussion message flag.
     *
     * @param primaryKey the primary key of this discussion message flag
     */
    public void setPrimaryKey(Long primaryKey);

    /**
     * Returns the pk of this discussion message flag.
     *
     * @return the pk of this discussion message flag
     */
    public Long getPk();

    /**
     * Sets the pk of this discussion message flag.
     *
     * @param pk the pk of this discussion message flag
     */
    public void setPk(Long pk);

    /**
     * Returns the message ID of this discussion message flag.
     *
     * @return the message ID of this discussion message flag
     */
    public Long getMessageId();

    /**
     * Sets the message ID of this discussion message flag.
     *
     * @param messageId the message ID of this discussion message flag
     */
    public void setMessageId(Long messageId);

    /**
     * Returns the flag type of this discussion message flag.
     *
     * @return the flag type of this discussion message flag
     */
    @AutoEscape
    public String getFlagType();

    /**
     * Sets the flag type of this discussion message flag.
     *
     * @param flagType the flag type of this discussion message flag
     */
    public void setFlagType(String flagType);

    /**
     * Returns the data of this discussion message flag.
     *
     * @return the data of this discussion message flag
     */
    @AutoEscape
    public String getData();

    /**
     * Sets the data of this discussion message flag.
     *
     * @param data the data of this discussion message flag
     */
    public void setData(String data);

    /**
     * Returns the created of this discussion message flag.
     *
     * @return the created of this discussion message flag
     */
    public Date getCreated();

    /**
     * Sets the created of this discussion message flag.
     *
     * @param created the created of this discussion message flag
     */
    public void setCreated(Date created);

    /**
     * Returns the user ID of this discussion message flag.
     *
     * @return the user ID of this discussion message flag
     */
    public Long getUserId();

    /**
     * Sets the user ID of this discussion message flag.
     *
     * @param userId the user ID of this discussion message flag
     */
    public void setUserId(Long userId);

    public boolean isNew();

    public void setNew(boolean n);

    public boolean isCachedModel();

    public void setCachedModel(boolean cachedModel);

    public boolean isEscapedModel();

    public Serializable getPrimaryKeyObj();

    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    public ExpandoBridge getExpandoBridge();

    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    public Object clone();

    public int compareTo(DiscussionMessageFlag discussionMessageFlag);

    public int hashCode();

    public CacheModel<DiscussionMessageFlag> toCacheModel();

    public DiscussionMessageFlag toEscapedModel();

    public String toString();

    public String toXmlString();
}
