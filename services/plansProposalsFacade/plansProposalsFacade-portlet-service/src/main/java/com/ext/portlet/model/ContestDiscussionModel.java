package com.ext.portlet.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the ContestDiscussion service. Represents a row in the &quot;xcolab_ContestDiscussion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ext.portlet.model.impl.ContestDiscussionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ext.portlet.model.impl.ContestDiscussionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ContestDiscussion
 * @see com.ext.portlet.model.impl.ContestDiscussionImpl
 * @see com.ext.portlet.model.impl.ContestDiscussionModelImpl
 * @generated
 */
public interface ContestDiscussionModel extends BaseModel<ContestDiscussion> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a contest discussion model instance should use the {@link ContestDiscussion} interface instead.
     */

    /**
     * Returns the primary key of this contest discussion.
     *
     * @return the primary key of this contest discussion
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this contest discussion.
     *
     * @param primaryKey the primary key of this contest discussion
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the discussion ID of this contest discussion.
     *
     * @return the discussion ID of this contest discussion
     */
    public long getDiscussionId();

    /**
     * Sets the discussion ID of this contest discussion.
     *
     * @param DiscussionId the discussion ID of this contest discussion
     */
    public void setDiscussionId(long DiscussionId);

    /**
     * Returns the contest ID of this contest discussion.
     *
     * @return the contest ID of this contest discussion
     */
    public long getContestId();

    /**
     * Sets the contest ID of this contest discussion.
     *
     * @param ContestId the contest ID of this contest discussion
     */
    public void setContestId(long ContestId);

    /**
     * Returns the tab of this contest discussion.
     *
     * @return the tab of this contest discussion
     */
    @AutoEscape
    public String getTab();

    /**
     * Sets the tab of this contest discussion.
     *
     * @param Tab the tab of this contest discussion
     */
    public void setTab(String Tab);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(ContestDiscussion contestDiscussion);

    @Override
    public int hashCode();

    @Override
    public CacheModel<ContestDiscussion> toCacheModel();

    @Override
    public ContestDiscussion toEscapedModel();

    @Override
    public ContestDiscussion toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
