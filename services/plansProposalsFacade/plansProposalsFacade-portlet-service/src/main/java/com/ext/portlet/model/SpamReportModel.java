package com.ext.portlet.model;

import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the SpamReport service. Represents a row in the &quot;xcolab_SpamReport&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ext.portlet.model.impl.SpamReportModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ext.portlet.model.impl.SpamReportImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SpamReport
 * @see com.ext.portlet.model.impl.SpamReportImpl
 * @see com.ext.portlet.model.impl.SpamReportModelImpl
 * @generated
 */
public interface SpamReportModel extends BaseModel<SpamReport> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a spam report model instance should use the {@link SpamReport} interface instead.
     */

    /**
     * Returns the primary key of this spam report.
     *
     * @return the primary key of this spam report
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this spam report.
     *
     * @param primaryKey the primary key of this spam report
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the id_ of this spam report.
     *
     * @return the id_ of this spam report
     */
    public long getId_();

    /**
     * Sets the id_ of this spam report.
     *
     * @param id_ the id_ of this spam report
     */
    public void setId_(long id_);

    /**
     * Returns the spam user ID of this spam report.
     *
     * @return the spam user ID of this spam report
     */
    public long getSpamUserId();

    /**
     * Sets the spam user ID of this spam report.
     *
     * @param spamUserId the spam user ID of this spam report
     */
    public void setSpamUserId(long spamUserId);

    /**
     * Returns the spam user uuid of this spam report.
     *
     * @return the spam user uuid of this spam report
     * @throws SystemException if a system exception occurred
     */
    public String getSpamUserUuid() throws SystemException;

    /**
     * Sets the spam user uuid of this spam report.
     *
     * @param spamUserUuid the spam user uuid of this spam report
     */
    public void setSpamUserUuid(String spamUserUuid);

    /**
     * Returns the reporter user ID of this spam report.
     *
     * @return the reporter user ID of this spam report
     */
    public long getReporterUserId();

    /**
     * Sets the reporter user ID of this spam report.
     *
     * @param reporterUserId the reporter user ID of this spam report
     */
    public void setReporterUserId(long reporterUserId);

    /**
     * Returns the reporter user uuid of this spam report.
     *
     * @return the reporter user uuid of this spam report
     * @throws SystemException if a system exception occurred
     */
    public String getReporterUserUuid() throws SystemException;

    /**
     * Sets the reporter user uuid of this spam report.
     *
     * @param reporterUserUuid the reporter user uuid of this spam report
     */
    public void setReporterUserUuid(String reporterUserUuid);

    /**
     * Returns the discussion message ID of this spam report.
     *
     * @return the discussion message ID of this spam report
     */
    public long getDiscussionMessageId();

    /**
     * Sets the discussion message ID of this spam report.
     *
     * @param discussionMessageId the discussion message ID of this spam report
     */
    public void setDiscussionMessageId(long discussionMessageId);

    /**
     * Returns the is admin report of this spam report.
     *
     * @return the is admin report of this spam report
     */
    public boolean getIsAdminReport();

    /**
     * Returns <code>true</code> if this spam report is is admin report.
     *
     * @return <code>true</code> if this spam report is is admin report; <code>false</code> otherwise
     */
    public boolean isIsAdminReport();

    /**
     * Sets whether this spam report is is admin report.
     *
     * @param isAdminReport the is admin report of this spam report
     */
    public void setIsAdminReport(boolean isAdminReport);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(com.ext.portlet.model.SpamReport spamReport);

    @Override
    public int hashCode();

    @Override
    public CacheModel<com.ext.portlet.model.SpamReport> toCacheModel();

    @Override
    public com.ext.portlet.model.SpamReport toEscapedModel();

    @Override
    public com.ext.portlet.model.SpamReport toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
