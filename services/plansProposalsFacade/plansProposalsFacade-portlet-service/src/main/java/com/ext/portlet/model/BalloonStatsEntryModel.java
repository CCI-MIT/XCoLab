package com.ext.portlet.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the BalloonStatsEntry service. Represents a row in the &quot;xcolab_BalloonStatsEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ext.portlet.model.impl.BalloonStatsEntryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ext.portlet.model.impl.BalloonStatsEntryImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see BalloonStatsEntry
 * @see com.ext.portlet.model.impl.BalloonStatsEntryImpl
 * @see com.ext.portlet.model.impl.BalloonStatsEntryModelImpl
 * @generated
 */
public interface BalloonStatsEntryModel extends BaseModel<BalloonStatsEntry> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a balloon stats entry model instance should use the {@link BalloonStatsEntry} interface instead.
     */

    /**
     * Returns the primary key of this balloon stats entry.
     *
     * @return the primary key of this balloon stats entry
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this balloon stats entry.
     *
     * @param primaryKey the primary key of this balloon stats entry
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the ID of this balloon stats entry.
     *
     * @return the ID of this balloon stats entry
     */
    public long getId();

    /**
     * Sets the ID of this balloon stats entry.
     *
     * @param id the ID of this balloon stats entry
     */
    public void setId(long id);

    /**
     * Returns the first contest ID of this balloon stats entry.
     *
     * @return the first contest ID of this balloon stats entry
     */
    public long getFirstContestId();

    /**
     * Sets the first contest ID of this balloon stats entry.
     *
     * @param firstContestId the first contest ID of this balloon stats entry
     */
    public void setFirstContestId(long firstContestId);

    /**
     * Returns the second contest ID of this balloon stats entry.
     *
     * @return the second contest ID of this balloon stats entry
     */
    public long getSecondContestId();

    /**
     * Sets the second contest ID of this balloon stats entry.
     *
     * @param secondContestId the second contest ID of this balloon stats entry
     */
    public void setSecondContestId(long secondContestId);

    /**
     * Returns the choosen contest of this balloon stats entry.
     *
     * @return the choosen contest of this balloon stats entry
     */
    public int getChoosenContest();

    /**
     * Sets the choosen contest of this balloon stats entry.
     *
     * @param choosenContest the choosen contest of this balloon stats entry
     */
    public void setChoosenContest(int choosenContest);

    /**
     * Returns the cookie of this balloon stats entry.
     *
     * @return the cookie of this balloon stats entry
     */
    @AutoEscape
    public String getCookie();

    /**
     * Sets the cookie of this balloon stats entry.
     *
     * @param cookie the cookie of this balloon stats entry
     */
    public void setCookie(String cookie);

    /**
     * Returns the ip of this balloon stats entry.
     *
     * @return the ip of this balloon stats entry
     */
    @AutoEscape
    public String getIp();

    /**
     * Sets the ip of this balloon stats entry.
     *
     * @param ip the ip of this balloon stats entry
     */
    public void setIp(String ip);

    /**
     * Returns the extra data of this balloon stats entry.
     *
     * @return the extra data of this balloon stats entry
     */
    @AutoEscape
    public String getExtraData();

    /**
     * Sets the extra data of this balloon stats entry.
     *
     * @param extraData the extra data of this balloon stats entry
     */
    public void setExtraData(String extraData);

    public boolean isNew();

    public void setNew(boolean n);

    public boolean isCachedModel();

    public void setCachedModel(boolean cachedModel);

    public boolean isEscapedModel();

    public Serializable getPrimaryKeyObj();

    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    public ExpandoBridge getExpandoBridge();

    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    public Object clone();

    public int compareTo(BalloonStatsEntry balloonStatsEntry);

    public int hashCode();

    public CacheModel<BalloonStatsEntry> toCacheModel();

    public BalloonStatsEntry toEscapedModel();

    public String toString();

    public String toXmlString();
}
