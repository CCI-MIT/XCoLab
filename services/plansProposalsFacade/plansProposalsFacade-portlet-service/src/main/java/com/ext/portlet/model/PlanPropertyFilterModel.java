package com.ext.portlet.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the PlanPropertyFilter service. Represents a row in the &quot;xcolab_PlanPropertyFilter&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ext.portlet.model.impl.PlanPropertyFilterModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ext.portlet.model.impl.PlanPropertyFilterImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PlanPropertyFilter
 * @see com.ext.portlet.model.impl.PlanPropertyFilterImpl
 * @see com.ext.portlet.model.impl.PlanPropertyFilterModelImpl
 * @generated
 */
public interface PlanPropertyFilterModel extends BaseModel<PlanPropertyFilter> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a plan property filter model instance should use the {@link PlanPropertyFilter} interface instead.
     */

    /**
     * Returns the primary key of this plan property filter.
     *
     * @return the primary key of this plan property filter
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this plan property filter.
     *
     * @param primaryKey the primary key of this plan property filter
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the plan property filter ID of this plan property filter.
     *
     * @return the plan property filter ID of this plan property filter
     */
    public long getPlanPropertyFilterId();

    /**
     * Sets the plan property filter ID of this plan property filter.
     *
     * @param planPropertyFilterId the plan property filter ID of this plan property filter
     */
    public void setPlanPropertyFilterId(long planPropertyFilterId);

    /**
     * Returns the property name of this plan property filter.
     *
     * @return the property name of this plan property filter
     */
    @AutoEscape
    public String getPropertyName();

    /**
     * Sets the property name of this plan property filter.
     *
     * @param propertyName the property name of this plan property filter
     */
    public void setPropertyName(String propertyName);

    /**
     * Returns the plan user settings ID of this plan property filter.
     *
     * @return the plan user settings ID of this plan property filter
     */
    public long getPlanUserSettingsId();

    /**
     * Sets the plan user settings ID of this plan property filter.
     *
     * @param planUserSettingsId the plan user settings ID of this plan property filter
     */
    public void setPlanUserSettingsId(long planUserSettingsId);

    /**
     * Returns the value of this plan property filter.
     *
     * @return the value of this plan property filter
     */
    @AutoEscape
    public String getValue();

    /**
     * Sets the value of this plan property filter.
     *
     * @param value the value of this plan property filter
     */
    public void setValue(String value);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(PlanPropertyFilter planPropertyFilter);

    @Override
    public int hashCode();

    @Override
    public CacheModel<PlanPropertyFilter> toCacheModel();

    @Override
    public PlanPropertyFilter toEscapedModel();

    @Override
    public PlanPropertyFilter toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
