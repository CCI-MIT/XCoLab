package com.ext.portlet.model;

import com.ext.portlet.service.persistence.PlansFilterPK;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the PlansFilter service. Represents a row in the &quot;xcolab_PlansFilter&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ext.portlet.model.impl.PlansFilterModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ext.portlet.model.impl.PlansFilterImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PlansFilter
 * @see com.ext.portlet.model.impl.PlansFilterImpl
 * @see com.ext.portlet.model.impl.PlansFilterModelImpl
 * @generated
 */
public interface PlansFilterModel extends BaseModel<PlansFilter> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a plans filter model instance should use the {@link PlansFilter} interface instead.
     */

    /**
     * Returns the primary key of this plans filter.
     *
     * @return the primary key of this plans filter
     */
    public PlansFilterPK getPrimaryKey();

    /**
     * Sets the primary key of this plans filter.
     *
     * @param primaryKey the primary key of this plans filter
     */
    public void setPrimaryKey(PlansFilterPK primaryKey);

    /**
     * Returns the user ID of this plans filter.
     *
     * @return the user ID of this plans filter
     */
    public long getUserId();

    /**
     * Sets the user ID of this plans filter.
     *
     * @param userId the user ID of this plans filter
     */
    public void setUserId(long userId);

    /**
     * Returns the user uuid of this plans filter.
     *
     * @return the user uuid of this plans filter
     * @throws SystemException if a system exception occurred
     */
    public String getUserUuid() throws SystemException;

    /**
     * Sets the user uuid of this plans filter.
     *
     * @param userUuid the user uuid of this plans filter
     */
    public void setUserUuid(String userUuid);

    /**
     * Returns the plan type ID of this plans filter.
     *
     * @return the plan type ID of this plans filter
     */
    public long getPlanTypeId();

    /**
     * Sets the plan type ID of this plans filter.
     *
     * @param planTypeId the plan type ID of this plans filter
     */
    public void setPlanTypeId(long planTypeId);

    /**
     * Returns the name of this plans filter.
     *
     * @return the name of this plans filter
     */
    @AutoEscape
    public String getName();

    /**
     * Sets the name of this plans filter.
     *
     * @param name the name of this plans filter
     */
    public void setName(String name);

    /**
     * Returns the creator of this plans filter.
     *
     * @return the creator of this plans filter
     */
    @AutoEscape
    public String getCreator();

    /**
     * Sets the creator of this plans filter.
     *
     * @param creator the creator of this plans filter
     */
    public void setCreator(String creator);

    /**
     * Returns the description of this plans filter.
     *
     * @return the description of this plans filter
     */
    @AutoEscape
    public String getDescription();

    /**
     * Sets the description of this plans filter.
     *
     * @param description the description of this plans filter
     */
    public void setDescription(String description);

    /**
     * Returns the c o2 from of this plans filter.
     *
     * @return the c o2 from of this plans filter
     */
    public Double getCO2From();

    /**
     * Sets the c o2 from of this plans filter.
     *
     * @param CO2From the c o2 from of this plans filter
     */
    public void setCO2From(Double CO2From);

    /**
     * Returns the c o2 to of this plans filter.
     *
     * @return the c o2 to of this plans filter
     */
    public Double getCO2To();

    /**
     * Sets the c o2 to of this plans filter.
     *
     * @param CO2To the c o2 to of this plans filter
     */
    public void setCO2To(Double CO2To);

    /**
     * Returns the votes from of this plans filter.
     *
     * @return the votes from of this plans filter
     */
    public Double getVotesFrom();

    /**
     * Sets the votes from of this plans filter.
     *
     * @param votesFrom the votes from of this plans filter
     */
    public void setVotesFrom(Double votesFrom);

    /**
     * Returns the votes to of this plans filter.
     *
     * @return the votes to of this plans filter
     */
    public Double getVotesTo();

    /**
     * Sets the votes to of this plans filter.
     *
     * @param votesTo the votes to of this plans filter
     */
    public void setVotesTo(Double votesTo);

    /**
     * Returns the damage from of this plans filter.
     *
     * @return the damage from of this plans filter
     */
    public Double getDamageFrom();

    /**
     * Sets the damage from of this plans filter.
     *
     * @param damageFrom the damage from of this plans filter
     */
    public void setDamageFrom(Double damageFrom);

    /**
     * Returns the damage to of this plans filter.
     *
     * @return the damage to of this plans filter
     */
    public Double getDamageTo();

    /**
     * Sets the damage to of this plans filter.
     *
     * @param damageTo the damage to of this plans filter
     */
    public void setDamageTo(Double damageTo);

    /**
     * Returns the mitigation from of this plans filter.
     *
     * @return the mitigation from of this plans filter
     */
    public Double getMitigationFrom();

    /**
     * Sets the mitigation from of this plans filter.
     *
     * @param mitigationFrom the mitigation from of this plans filter
     */
    public void setMitigationFrom(Double mitigationFrom);

    /**
     * Returns the mitigation to of this plans filter.
     *
     * @return the mitigation to of this plans filter
     */
    public Double getMitigationTo();

    /**
     * Sets the mitigation to of this plans filter.
     *
     * @param mitigationTo the mitigation to of this plans filter
     */
    public void setMitigationTo(Double mitigationTo);

    /**
     * Returns the date from of this plans filter.
     *
     * @return the date from of this plans filter
     */
    public Date getDateFrom();

    /**
     * Sets the date from of this plans filter.
     *
     * @param dateFrom the date from of this plans filter
     */
    public void setDateFrom(Date dateFrom);

    /**
     * Returns the date to of this plans filter.
     *
     * @return the date to of this plans filter
     */
    public Date getDateTo();

    /**
     * Sets the date to of this plans filter.
     *
     * @param dateTo the date to of this plans filter
     */
    public void setDateTo(Date dateTo);

    /**
     * Returns the filter positions all of this plans filter.
     *
     * @return the filter positions all of this plans filter
     */
    public boolean getFilterPositionsAll();

    /**
     * Returns <code>true</code> if this plans filter is filter positions all.
     *
     * @return <code>true</code> if this plans filter is filter positions all; <code>false</code> otherwise
     */
    public boolean isFilterPositionsAll();

    /**
     * Sets whether this plans filter is filter positions all.
     *
     * @param filterPositionsAll the filter positions all of this plans filter
     */
    public void setFilterPositionsAll(boolean filterPositionsAll);

    /**
     * Returns the enabled of this plans filter.
     *
     * @return the enabled of this plans filter
     */
    public boolean getEnabled();

    /**
     * Returns <code>true</code> if this plans filter is enabled.
     *
     * @return <code>true</code> if this plans filter is enabled; <code>false</code> otherwise
     */
    public boolean isEnabled();

    /**
     * Sets whether this plans filter is enabled.
     *
     * @param enabled the enabled of this plans filter
     */
    public void setEnabled(boolean enabled);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(com.ext.portlet.model.PlansFilter plansFilter);

    @Override
    public int hashCode();

    @Override
    public CacheModel<com.ext.portlet.model.PlansFilter> toCacheModel();

    @Override
    public com.ext.portlet.model.PlansFilter toEscapedModel();

    @Override
    public com.ext.portlet.model.PlansFilter toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
