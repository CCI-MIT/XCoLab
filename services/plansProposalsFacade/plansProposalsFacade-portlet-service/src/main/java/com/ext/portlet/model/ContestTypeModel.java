package com.ext.portlet.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the ContestType service. Represents a row in the &quot;xcolab_ContestType&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ext.portlet.model.impl.ContestTypeModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ext.portlet.model.impl.ContestTypeImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ContestType
 * @see com.ext.portlet.model.impl.ContestTypeImpl
 * @see com.ext.portlet.model.impl.ContestTypeModelImpl
 * @generated
 */
public interface ContestTypeModel extends BaseModel<ContestType> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a contest type model instance should use the {@link ContestType} interface instead.
     */

    /**
     * Returns the primary key of this contest type.
     *
     * @return the primary key of this contest type
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this contest type.
     *
     * @param primaryKey the primary key of this contest type
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the ID of this contest type.
     *
     * @return the ID of this contest type
     */
    public long getId();

    /**
     * Sets the ID of this contest type.
     *
     * @param id the ID of this contest type
     */
    public void setId(long id);

    /**
     * Returns the contest name of this contest type.
     *
     * @return the contest name of this contest type
     */
    @AutoEscape
    public String getContestName();

    /**
     * Sets the contest name of this contest type.
     *
     * @param contestName the contest name of this contest type
     */
    public void setContestName(String contestName);

    /**
     * Returns the contest name plural of this contest type.
     *
     * @return the contest name plural of this contest type
     */
    @AutoEscape
    public String getContestNamePlural();

    /**
     * Sets the contest name plural of this contest type.
     *
     * @param contestNamePlural the contest name plural of this contest type
     */
    public void setContestNamePlural(String contestNamePlural);

    /**
     * Returns the proposal name of this contest type.
     *
     * @return the proposal name of this contest type
     */
    @AutoEscape
    public String getProposalName();

    /**
     * Sets the proposal name of this contest type.
     *
     * @param proposalName the proposal name of this contest type
     */
    public void setProposalName(String proposalName);

    /**
     * Returns the proposal name plural of this contest type.
     *
     * @return the proposal name plural of this contest type
     */
    @AutoEscape
    public String getProposalNamePlural();

    /**
     * Sets the proposal name plural of this contest type.
     *
     * @param proposalNamePlural the proposal name plural of this contest type
     */
    public void setProposalNamePlural(String proposalNamePlural);

    /**
     * Returns the has discussion of this contest type.
     *
     * @return the has discussion of this contest type
     */
    public boolean getHasDiscussion();

    /**
     * Returns <code>true</code> if this contest type is has discussion.
     *
     * @return <code>true</code> if this contest type is has discussion; <code>false</code> otherwise
     */
    public boolean isHasDiscussion();

    /**
     * Sets whether this contest type is has discussion.
     *
     * @param hasDiscussion the has discussion of this contest type
     */
    public void setHasDiscussion(boolean hasDiscussion);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(com.ext.portlet.model.ContestType contestType);

    @Override
    public int hashCode();

    @Override
    public CacheModel<com.ext.portlet.model.ContestType> toCacheModel();

    @Override
    public com.ext.portlet.model.ContestType toEscapedModel();

    @Override
    public com.ext.portlet.model.ContestType toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
